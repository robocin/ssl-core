// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: protocols/playback/detection.proto

package playback

import (
	common "github.com/robocin/ssl-core/playback-ms/pkg/pb/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Detection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerialId          uint64                 `protobuf:"varint,1,opt,name=serial_id,json=serialId,proto3" json:"serial_id,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpectedFramerate uint32                 `protobuf:"varint,3,opt,name=expected_framerate,json=expectedFramerate,proto3" json:"expected_framerate,omitempty"`
	Balls             []*Detection_Ball      `protobuf:"bytes,4,rep,name=balls,proto3" json:"balls,omitempty"`
	Robots            []*Detection_Robot     `protobuf:"bytes,5,rep,name=robots,proto3" json:"robots,omitempty"`
}

func (x *Detection) Reset() {
	*x = Detection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_playback_detection_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Detection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Detection) ProtoMessage() {}

func (x *Detection) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_playback_detection_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Detection.ProtoReflect.Descriptor instead.
func (*Detection) Descriptor() ([]byte, []int) {
	return file_protocols_playback_detection_proto_rawDescGZIP(), []int{0}
}

func (x *Detection) GetSerialId() uint64 {
	if x != nil {
		return x.SerialId
	}
	return 0
}

func (x *Detection) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Detection) GetExpectedFramerate() uint32 {
	if x != nil {
		return x.ExpectedFramerate
	}
	return 0
}

func (x *Detection) GetBalls() []*Detection_Ball {
	if x != nil {
		return x.Balls
	}
	return nil
}

func (x *Detection) GetRobots() []*Detection_Robot {
	if x != nil {
		return x.Robots
	}
	return nil
}

type Detection_Ball struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Confidence      float32                         `protobuf:"fixed32,1,opt,name=confidence,proto3" json:"confidence,omitempty"`
	Position        *common.Point3Df                `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Velocity        *common.Point3Df                `protobuf:"bytes,3,opt,name=velocity,proto3" json:"velocity,omitempty"`
	KickInformation *Detection_Ball_KickInformation `protobuf:"bytes,4,opt,name=kick_information,json=kickInformation,proto3,oneof" json:"kick_information,omitempty"`
}

func (x *Detection_Ball) Reset() {
	*x = Detection_Ball{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_playback_detection_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Detection_Ball) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Detection_Ball) ProtoMessage() {}

func (x *Detection_Ball) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_playback_detection_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Detection_Ball.ProtoReflect.Descriptor instead.
func (*Detection_Ball) Descriptor() ([]byte, []int) {
	return file_protocols_playback_detection_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Detection_Ball) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *Detection_Ball) GetPosition() *common.Point3Df {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Detection_Ball) GetVelocity() *common.Point3Df {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *Detection_Ball) GetKickInformation() *Detection_Ball_KickInformation {
	if x != nil {
		return x.KickInformation
	}
	return nil
}

type Detection_Robot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Confidence      float32                   `protobuf:"fixed32,1,opt,name=confidence,proto3" json:"confidence,omitempty"`
	RobotId         *common.RobotId           `protobuf:"bytes,2,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
	Position        *common.Point2Df          `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Angle           float32                   `protobuf:"fixed32,4,opt,name=angle,proto3" json:"angle,omitempty"`
	Velocity        *common.Point2Df          `protobuf:"bytes,5,opt,name=velocity,proto3" json:"velocity,omitempty"`
	AngularVelocity float32                   `protobuf:"fixed32,6,opt,name=angular_velocity,json=angularVelocity,proto3" json:"angular_velocity,omitempty"`
	Radius          float32                   `protobuf:"fixed32,9,opt,name=radius,proto3" json:"radius,omitempty"`
	Height          float32                   `protobuf:"fixed32,10,opt,name=height,proto3" json:"height,omitempty"`
	DribblerWidth   float32                   `protobuf:"fixed32,11,opt,name=dribbler_width,json=dribblerWidth,proto3" json:"dribbler_width,omitempty"`
	Feedback        *Detection_Robot_Feedback `protobuf:"bytes,12,opt,name=feedback,proto3" json:"feedback,omitempty"`
}

func (x *Detection_Robot) Reset() {
	*x = Detection_Robot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_playback_detection_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Detection_Robot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Detection_Robot) ProtoMessage() {}

func (x *Detection_Robot) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_playback_detection_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Detection_Robot.ProtoReflect.Descriptor instead.
func (*Detection_Robot) Descriptor() ([]byte, []int) {
	return file_protocols_playback_detection_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Detection_Robot) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *Detection_Robot) GetRobotId() *common.RobotId {
	if x != nil {
		return x.RobotId
	}
	return nil
}

func (x *Detection_Robot) GetPosition() *common.Point2Df {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Detection_Robot) GetAngle() float32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

func (x *Detection_Robot) GetVelocity() *common.Point2Df {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *Detection_Robot) GetAngularVelocity() float32 {
	if x != nil {
		return x.AngularVelocity
	}
	return 0
}

func (x *Detection_Robot) GetRadius() float32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *Detection_Robot) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Detection_Robot) GetDribblerWidth() float32 {
	if x != nil {
		return x.DribblerWidth
	}
	return 0
}

func (x *Detection_Robot) GetFeedback() *Detection_Robot_Feedback {
	if x != nil {
		return x.Feedback
	}
	return nil
}

type Detection_Ball_KickInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RobotId                *common.RobotId        `protobuf:"bytes,1,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
	StartPosition          *common.Point2Df       `protobuf:"bytes,2,opt,name=start_position,json=startPosition,proto3" json:"start_position,omitempty"`
	StartVelocity          *common.Point3Df       `protobuf:"bytes,3,opt,name=start_velocity,json=startVelocity,proto3" json:"start_velocity,omitempty"`
	StartTimestamp         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	PredictedStopPosition  *common.Point2Df       `protobuf:"bytes,5,opt,name=predicted_stop_position,json=predictedStopPosition,proto3" json:"predicted_stop_position,omitempty"`
	PredictedStopTimestamp *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=predicted_stop_timestamp,json=predictedStopTimestamp,proto3" json:"predicted_stop_timestamp,omitempty"`
}

func (x *Detection_Ball_KickInformation) Reset() {
	*x = Detection_Ball_KickInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_playback_detection_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Detection_Ball_KickInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Detection_Ball_KickInformation) ProtoMessage() {}

func (x *Detection_Ball_KickInformation) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_playback_detection_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Detection_Ball_KickInformation.ProtoReflect.Descriptor instead.
func (*Detection_Ball_KickInformation) Descriptor() ([]byte, []int) {
	return file_protocols_playback_detection_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *Detection_Ball_KickInformation) GetRobotId() *common.RobotId {
	if x != nil {
		return x.RobotId
	}
	return nil
}

func (x *Detection_Ball_KickInformation) GetStartPosition() *common.Point2Df {
	if x != nil {
		return x.StartPosition
	}
	return nil
}

func (x *Detection_Ball_KickInformation) GetStartVelocity() *common.Point3Df {
	if x != nil {
		return x.StartVelocity
	}
	return nil
}

func (x *Detection_Ball_KickInformation) GetStartTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTimestamp
	}
	return nil
}

func (x *Detection_Ball_KickInformation) GetPredictedStopPosition() *common.Point2Df {
	if x != nil {
		return x.PredictedStopPosition
	}
	return nil
}

func (x *Detection_Ball_KickInformation) GetPredictedStopTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.PredictedStopTimestamp
	}
	return nil
}

type Detection_Robot_Feedback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DribblerBallContact  *bool                             `protobuf:"varint,1,opt,name=dribbler_ball_contact,json=dribblerBallContact,proto3,oneof" json:"dribbler_ball_contact,omitempty"`
	KickChargePercentage *float32                          `protobuf:"fixed32,2,opt,name=kick_charge_percentage,json=kickChargePercentage,proto3,oneof" json:"kick_charge_percentage,omitempty"`
	BatteryPercentage    *float32                          `protobuf:"fixed32,3,opt,name=battery_percentage,json=batteryPercentage,proto3,oneof" json:"battery_percentage,omitempty"`
	Wheels               []*Detection_Robot_Feedback_Wheel `protobuf:"bytes,4,rep,name=wheels,proto3" json:"wheels,omitempty"`
}

func (x *Detection_Robot_Feedback) Reset() {
	*x = Detection_Robot_Feedback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_playback_detection_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Detection_Robot_Feedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Detection_Robot_Feedback) ProtoMessage() {}

func (x *Detection_Robot_Feedback) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_playback_detection_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Detection_Robot_Feedback.ProtoReflect.Descriptor instead.
func (*Detection_Robot_Feedback) Descriptor() ([]byte, []int) {
	return file_protocols_playback_detection_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *Detection_Robot_Feedback) GetDribblerBallContact() bool {
	if x != nil && x.DribblerBallContact != nil {
		return *x.DribblerBallContact
	}
	return false
}

func (x *Detection_Robot_Feedback) GetKickChargePercentage() float32 {
	if x != nil && x.KickChargePercentage != nil {
		return *x.KickChargePercentage
	}
	return 0
}

func (x *Detection_Robot_Feedback) GetBatteryPercentage() float32 {
	if x != nil && x.BatteryPercentage != nil {
		return *x.BatteryPercentage
	}
	return 0
}

func (x *Detection_Robot_Feedback) GetWheels() []*Detection_Robot_Feedback_Wheel {
	if x != nil {
		return x.Wheels
	}
	return nil
}

type Detection_Robot_Feedback_Wheel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WheelId    uint32  `protobuf:"varint,1,opt,name=wheel_id,json=wheelId,proto3" json:"wheel_id,omitempty"`
	MotorSpeed float32 `protobuf:"fixed32,2,opt,name=motor_speed,json=motorSpeed,proto3" json:"motor_speed,omitempty"`
}

func (x *Detection_Robot_Feedback_Wheel) Reset() {
	*x = Detection_Robot_Feedback_Wheel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_playback_detection_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Detection_Robot_Feedback_Wheel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Detection_Robot_Feedback_Wheel) ProtoMessage() {}

func (x *Detection_Robot_Feedback_Wheel) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_playback_detection_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Detection_Robot_Feedback_Wheel.ProtoReflect.Descriptor instead.
func (*Detection_Robot_Feedback_Wheel) Descriptor() ([]byte, []int) {
	return file_protocols_playback_detection_proto_rawDescGZIP(), []int{0, 1, 0, 0}
}

func (x *Detection_Robot_Feedback_Wheel) GetWheelId() uint32 {
	if x != nil {
		return x.WheelId
	}
	return 0
}

func (x *Detection_Robot_Feedback_Wheel) GetMotorSpeed() float32 {
	if x != nil {
		return x.MotorSpeed
	}
	return 0
}

var File_protocols_playback_detection_proto protoreflect.FileDescriptor

var file_protocols_playback_detection_proto_rawDesc = []byte{
	0x0a, 0x22, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x70, 0x6c, 0x61, 0x79,
	0x62, 0x61, 0x63, 0x6b, 0x2f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e,
	0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x6f, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x5f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9e, 0x0e, 0x0a, 0x09,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x65,
	0x78, 0x70, 0x65, 0x63, 0x74, 0x65, 0x64, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x12, 0x38, 0x0a, 0x05, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x62, 0x61, 0x63, 0x6b, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42,
	0x61, 0x6c, 0x6c, 0x52, 0x05, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x12, 0x3b, 0x0a, 0x06, 0x72, 0x6f,
	0x62, 0x6f, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x2e,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52,
	0x06, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x1a, 0xce, 0x05, 0x0a, 0x04, 0x42, 0x61, 0x6c, 0x6c,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x36, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x33, 0x44, 0x66, 0x52, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x33, 0x44, 0x66, 0x52, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x62, 0x0a, 0x10, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x2e,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x2e, 0x4b,
	0x69, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x0f, 0x6b, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x88, 0x01, 0x01, 0x1a, 0xbc, 0x03, 0x0a, 0x0f, 0x4b, 0x69, 0x63, 0x6b, 0x49, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x6f, 0x62, 0x6f,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x49, 0x64, 0x52, 0x07, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x41,
	0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32,
	0x44, 0x66, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x76, 0x65, 0x6c, 0x6f, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x33, 0x44, 0x66, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x56, 0x65, 0x6c, 0x6f,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x52, 0x0a, 0x17, 0x70, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x15, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65,
	0x64, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a,
	0x18, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x16, 0x70, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xc1, 0x06, 0x0a, 0x05, 0x52, 0x6f, 0x62,
	0x6f, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x52,
	0x07, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x32, 0x44, 0x66, 0x52, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x29,
	0x0a, 0x10, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61,
	0x72, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64,
	0x69, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x72, 0x69,
	0x62, 0x62, 0x6c, 0x65, 0x72, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0d, 0x64, 0x72, 0x69, 0x62, 0x62, 0x6c, 0x65, 0x72, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x48, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x70,
	0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x1a, 0x8f, 0x03, 0x0a, 0x08, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x37, 0x0a, 0x15, 0x64, 0x72, 0x69, 0x62, 0x62,
	0x6c, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x13, 0x64, 0x72, 0x69, 0x62, 0x62, 0x6c,
	0x65, 0x72, 0x42, 0x61, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x39, 0x0a, 0x16, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x48, 0x01, 0x52, 0x14, 0x6b, 0x69, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x12, 0x62,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x48, 0x02, 0x52, 0x11, 0x62, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x79, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x4a, 0x0a, 0x06, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x70, 0x6c, 0x61, 0x79,
	0x62, 0x61, 0x63, 0x6b, 0x2e, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x57, 0x68,
	0x65, 0x65, 0x6c, 0x52, 0x06, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x73, 0x1a, 0x43, 0x0a, 0x05, 0x57,
	0x68, 0x65, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x77, 0x68, 0x65, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x6d, 0x6f, 0x74, 0x6f, 0x72, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x42, 0x18, 0x0a, 0x16, 0x5f, 0x64, 0x72, 0x69, 0x62, 0x62, 0x6c, 0x65, 0x72, 0x5f, 0x62, 0x61,
	0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x6b,
	0x69, 0x63, 0x6b, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protocols_playback_detection_proto_rawDescOnce sync.Once
	file_protocols_playback_detection_proto_rawDescData = file_protocols_playback_detection_proto_rawDesc
)

func file_protocols_playback_detection_proto_rawDescGZIP() []byte {
	file_protocols_playback_detection_proto_rawDescOnce.Do(func() {
		file_protocols_playback_detection_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocols_playback_detection_proto_rawDescData)
	})
	return file_protocols_playback_detection_proto_rawDescData
}

var file_protocols_playback_detection_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_protocols_playback_detection_proto_goTypes = []interface{}{
	(*Detection)(nil),                      // 0: protocols.playback.Detection
	(*Detection_Ball)(nil),                 // 1: protocols.playback.Detection.Ball
	(*Detection_Robot)(nil),                // 2: protocols.playback.Detection.Robot
	(*Detection_Ball_KickInformation)(nil), // 3: protocols.playback.Detection.Ball.KickInformation
	(*Detection_Robot_Feedback)(nil),       // 4: protocols.playback.Detection.Robot.Feedback
	(*Detection_Robot_Feedback_Wheel)(nil), // 5: protocols.playback.Detection.Robot.Feedback.Wheel
	(*timestamppb.Timestamp)(nil),          // 6: google.protobuf.Timestamp
	(*common.Point3Df)(nil),                // 7: protocols.common.Point3Df
	(*common.RobotId)(nil),                 // 8: protocols.common.RobotId
	(*common.Point2Df)(nil),                // 9: protocols.common.Point2Df
}
var file_protocols_playback_detection_proto_depIdxs = []int32{
	6,  // 0: protocols.playback.Detection.created_at:type_name -> google.protobuf.Timestamp
	1,  // 1: protocols.playback.Detection.balls:type_name -> protocols.playback.Detection.Ball
	2,  // 2: protocols.playback.Detection.robots:type_name -> protocols.playback.Detection.Robot
	7,  // 3: protocols.playback.Detection.Ball.position:type_name -> protocols.common.Point3Df
	7,  // 4: protocols.playback.Detection.Ball.velocity:type_name -> protocols.common.Point3Df
	3,  // 5: protocols.playback.Detection.Ball.kick_information:type_name -> protocols.playback.Detection.Ball.KickInformation
	8,  // 6: protocols.playback.Detection.Robot.robot_id:type_name -> protocols.common.RobotId
	9,  // 7: protocols.playback.Detection.Robot.position:type_name -> protocols.common.Point2Df
	9,  // 8: protocols.playback.Detection.Robot.velocity:type_name -> protocols.common.Point2Df
	4,  // 9: protocols.playback.Detection.Robot.feedback:type_name -> protocols.playback.Detection.Robot.Feedback
	8,  // 10: protocols.playback.Detection.Ball.KickInformation.robot_id:type_name -> protocols.common.RobotId
	9,  // 11: protocols.playback.Detection.Ball.KickInformation.start_position:type_name -> protocols.common.Point2Df
	7,  // 12: protocols.playback.Detection.Ball.KickInformation.start_velocity:type_name -> protocols.common.Point3Df
	6,  // 13: protocols.playback.Detection.Ball.KickInformation.start_timestamp:type_name -> google.protobuf.Timestamp
	9,  // 14: protocols.playback.Detection.Ball.KickInformation.predicted_stop_position:type_name -> protocols.common.Point2Df
	6,  // 15: protocols.playback.Detection.Ball.KickInformation.predicted_stop_timestamp:type_name -> google.protobuf.Timestamp
	5,  // 16: protocols.playback.Detection.Robot.Feedback.wheels:type_name -> protocols.playback.Detection.Robot.Feedback.Wheel
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_protocols_playback_detection_proto_init() }
func file_protocols_playback_detection_proto_init() {
	if File_protocols_playback_detection_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocols_playback_detection_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Detection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_playback_detection_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Detection_Ball); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_playback_detection_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Detection_Robot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_playback_detection_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Detection_Ball_KickInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_playback_detection_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Detection_Robot_Feedback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_playback_detection_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Detection_Robot_Feedback_Wheel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protocols_playback_detection_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_protocols_playback_detection_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocols_playback_detection_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protocols_playback_detection_proto_goTypes,
		DependencyIndexes: file_protocols_playback_detection_proto_depIdxs,
		MessageInfos:      file_protocols_playback_detection_proto_msgTypes,
	}.Build()
	File_protocols_playback_detection_proto = out.File
	file_protocols_playback_detection_proto_rawDesc = nil
	file_protocols_playback_detection_proto_goTypes = nil
	file_protocols_playback_detection_proto_depIdxs = nil
}
