// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: protocols/common/game_event.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sources   []string               `protobuf:"bytes,1,rep,name=sources,proto3" json:"sources,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are assignable to Event:
	//
	//	*GameEvent_BallLeftFieldTouchLine
	//	*GameEvent_BallLeftFieldGoalLine
	//	*GameEvent_BallLeftFieldBoundary_
	//	*GameEvent_AimlessKick_
	//	*GameEvent_GoalkeeperHeldBall_
	//	*GameEvent_RobotTooCloseToDefenseArea_
	//	*GameEvent_RobotInDefenseArea_
	//	*GameEvent_RobotPushedRobot_
	//	*GameEvent_RobotHeldBallDeliberately_
	//	*GameEvent_RobotDribbledBallTooFar_
	//	*GameEvent_RobotTippedOver_
	//	*GameEvent_RobotTouchedBallInDefenseArea_
	//	*GameEvent_RobotKickedBallTooFast_
	//	*GameEvent_RobotCrashUnique_
	//	*GameEvent_RobotCrashDrawn_
	//	*GameEvent_RobotTooFastInStop_
	//	*GameEvent_RobotTooCloseToKickPoint_
	//	*GameEvent_RobotInterferedBallPlacement_
	//	*GameEvent_RobotDoubleTouchedBall_
	//	*GameEvent_NoProgressInGame_
	//	*GameEvent_MultipleCards_
	//	*GameEvent_MultipleFouls_
	//	*GameEvent_TooManyRobots_
	//	*GameEvent_BallPlacementSucceeded_
	//	*GameEvent_BallPlacementFailed_
	//	*GameEvent_PenaltyKickFailed_
	//	*GameEvent_PossibleGoal
	//	*GameEvent_Goal_
	//	*GameEvent_InvalidGoal
	//	*GameEvent_RobotSubstitution_
	//	*GameEvent_ChallengeFlag_
	//	*GameEvent_EmergencyStop_
	//	*GameEvent_UnsportingBehaviorMinor_
	//	*GameEvent_UnsportingBehaviorMajor_
	Event isGameEvent_Event `protobuf_oneof:"event"`
}

func (x *GameEvent) Reset() {
	*x = GameEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent) ProtoMessage() {}

func (x *GameEvent) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent.ProtoReflect.Descriptor instead.
func (*GameEvent) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0}
}

func (x *GameEvent) GetSources() []string {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *GameEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (m *GameEvent) GetEvent() isGameEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *GameEvent) GetBallLeftFieldTouchLine() *GameEvent_BallLeftField {
	if x, ok := x.GetEvent().(*GameEvent_BallLeftFieldTouchLine); ok {
		return x.BallLeftFieldTouchLine
	}
	return nil
}

func (x *GameEvent) GetBallLeftFieldGoalLine() *GameEvent_BallLeftField {
	if x, ok := x.GetEvent().(*GameEvent_BallLeftFieldGoalLine); ok {
		return x.BallLeftFieldGoalLine
	}
	return nil
}

func (x *GameEvent) GetBallLeftFieldBoundary() *GameEvent_BallLeftFieldBoundary {
	if x, ok := x.GetEvent().(*GameEvent_BallLeftFieldBoundary_); ok {
		return x.BallLeftFieldBoundary
	}
	return nil
}

func (x *GameEvent) GetAimlessKick() *GameEvent_AimlessKick {
	if x, ok := x.GetEvent().(*GameEvent_AimlessKick_); ok {
		return x.AimlessKick
	}
	return nil
}

func (x *GameEvent) GetGoalkeeperHeldBall() *GameEvent_GoalkeeperHeldBall {
	if x, ok := x.GetEvent().(*GameEvent_GoalkeeperHeldBall_); ok {
		return x.GoalkeeperHeldBall
	}
	return nil
}

func (x *GameEvent) GetRobotTooCloseToDefenseArea() *GameEvent_RobotTooCloseToDefenseArea {
	if x, ok := x.GetEvent().(*GameEvent_RobotTooCloseToDefenseArea_); ok {
		return x.RobotTooCloseToDefenseArea
	}
	return nil
}

func (x *GameEvent) GetRobotInDefenseArea() *GameEvent_RobotInDefenseArea {
	if x, ok := x.GetEvent().(*GameEvent_RobotInDefenseArea_); ok {
		return x.RobotInDefenseArea
	}
	return nil
}

func (x *GameEvent) GetRobotPushedRobot() *GameEvent_RobotPushedRobot {
	if x, ok := x.GetEvent().(*GameEvent_RobotPushedRobot_); ok {
		return x.RobotPushedRobot
	}
	return nil
}

func (x *GameEvent) GetRobotHeldBallDeliberately() *GameEvent_RobotHeldBallDeliberately {
	if x, ok := x.GetEvent().(*GameEvent_RobotHeldBallDeliberately_); ok {
		return x.RobotHeldBallDeliberately
	}
	return nil
}

func (x *GameEvent) GetRobotDribbledBallTooFar() *GameEvent_RobotDribbledBallTooFar {
	if x, ok := x.GetEvent().(*GameEvent_RobotDribbledBallTooFar_); ok {
		return x.RobotDribbledBallTooFar
	}
	return nil
}

func (x *GameEvent) GetRobotTippedOver() *GameEvent_RobotTippedOver {
	if x, ok := x.GetEvent().(*GameEvent_RobotTippedOver_); ok {
		return x.RobotTippedOver
	}
	return nil
}

func (x *GameEvent) GetRobotTouchedBallInDefenseArea() *GameEvent_RobotTouchedBallInDefenseArea {
	if x, ok := x.GetEvent().(*GameEvent_RobotTouchedBallInDefenseArea_); ok {
		return x.RobotTouchedBallInDefenseArea
	}
	return nil
}

func (x *GameEvent) GetRobotKickedBallTooFast() *GameEvent_RobotKickedBallTooFast {
	if x, ok := x.GetEvent().(*GameEvent_RobotKickedBallTooFast_); ok {
		return x.RobotKickedBallTooFast
	}
	return nil
}

func (x *GameEvent) GetRobotCrashUnique() *GameEvent_RobotCrashUnique {
	if x, ok := x.GetEvent().(*GameEvent_RobotCrashUnique_); ok {
		return x.RobotCrashUnique
	}
	return nil
}

func (x *GameEvent) GetRobotCrashDrawn() *GameEvent_RobotCrashDrawn {
	if x, ok := x.GetEvent().(*GameEvent_RobotCrashDrawn_); ok {
		return x.RobotCrashDrawn
	}
	return nil
}

func (x *GameEvent) GetRobotTooFastInStop() *GameEvent_RobotTooFastInStop {
	if x, ok := x.GetEvent().(*GameEvent_RobotTooFastInStop_); ok {
		return x.RobotTooFastInStop
	}
	return nil
}

func (x *GameEvent) GetRobotTooCloseToKickPoint() *GameEvent_RobotTooCloseToKickPoint {
	if x, ok := x.GetEvent().(*GameEvent_RobotTooCloseToKickPoint_); ok {
		return x.RobotTooCloseToKickPoint
	}
	return nil
}

func (x *GameEvent) GetRobotInterferedBallPlacement() *GameEvent_RobotInterferedBallPlacement {
	if x, ok := x.GetEvent().(*GameEvent_RobotInterferedBallPlacement_); ok {
		return x.RobotInterferedBallPlacement
	}
	return nil
}

func (x *GameEvent) GetRobotDoubleTouchedBall() *GameEvent_RobotDoubleTouchedBall {
	if x, ok := x.GetEvent().(*GameEvent_RobotDoubleTouchedBall_); ok {
		return x.RobotDoubleTouchedBall
	}
	return nil
}

func (x *GameEvent) GetNoProgressInGame() *GameEvent_NoProgressInGame {
	if x, ok := x.GetEvent().(*GameEvent_NoProgressInGame_); ok {
		return x.NoProgressInGame
	}
	return nil
}

func (x *GameEvent) GetMultipleCards() *GameEvent_MultipleCards {
	if x, ok := x.GetEvent().(*GameEvent_MultipleCards_); ok {
		return x.MultipleCards
	}
	return nil
}

func (x *GameEvent) GetMultipleFouls() *GameEvent_MultipleFouls {
	if x, ok := x.GetEvent().(*GameEvent_MultipleFouls_); ok {
		return x.MultipleFouls
	}
	return nil
}

func (x *GameEvent) GetTooManyRobots() *GameEvent_TooManyRobots {
	if x, ok := x.GetEvent().(*GameEvent_TooManyRobots_); ok {
		return x.TooManyRobots
	}
	return nil
}

func (x *GameEvent) GetBallPlacementSucceeded() *GameEvent_BallPlacementSucceeded {
	if x, ok := x.GetEvent().(*GameEvent_BallPlacementSucceeded_); ok {
		return x.BallPlacementSucceeded
	}
	return nil
}

func (x *GameEvent) GetBallPlacementFailed() *GameEvent_BallPlacementFailed {
	if x, ok := x.GetEvent().(*GameEvent_BallPlacementFailed_); ok {
		return x.BallPlacementFailed
	}
	return nil
}

func (x *GameEvent) GetPenaltyKickFailed() *GameEvent_PenaltyKickFailed {
	if x, ok := x.GetEvent().(*GameEvent_PenaltyKickFailed_); ok {
		return x.PenaltyKickFailed
	}
	return nil
}

func (x *GameEvent) GetPossibleGoal() *GameEvent_Goal {
	if x, ok := x.GetEvent().(*GameEvent_PossibleGoal); ok {
		return x.PossibleGoal
	}
	return nil
}

func (x *GameEvent) GetGoal() *GameEvent_Goal {
	if x, ok := x.GetEvent().(*GameEvent_Goal_); ok {
		return x.Goal
	}
	return nil
}

func (x *GameEvent) GetInvalidGoal() *GameEvent_Goal {
	if x, ok := x.GetEvent().(*GameEvent_InvalidGoal); ok {
		return x.InvalidGoal
	}
	return nil
}

func (x *GameEvent) GetRobotSubstitution() *GameEvent_RobotSubstitution {
	if x, ok := x.GetEvent().(*GameEvent_RobotSubstitution_); ok {
		return x.RobotSubstitution
	}
	return nil
}

func (x *GameEvent) GetChallengeFlag() *GameEvent_ChallengeFlag {
	if x, ok := x.GetEvent().(*GameEvent_ChallengeFlag_); ok {
		return x.ChallengeFlag
	}
	return nil
}

func (x *GameEvent) GetEmergencyStop() *GameEvent_EmergencyStop {
	if x, ok := x.GetEvent().(*GameEvent_EmergencyStop_); ok {
		return x.EmergencyStop
	}
	return nil
}

func (x *GameEvent) GetUnsportingBehaviorMinor() *GameEvent_UnsportingBehaviorMinor {
	if x, ok := x.GetEvent().(*GameEvent_UnsportingBehaviorMinor_); ok {
		return x.UnsportingBehaviorMinor
	}
	return nil
}

func (x *GameEvent) GetUnsportingBehaviorMajor() *GameEvent_UnsportingBehaviorMajor {
	if x, ok := x.GetEvent().(*GameEvent_UnsportingBehaviorMajor_); ok {
		return x.UnsportingBehaviorMajor
	}
	return nil
}

type isGameEvent_Event interface {
	isGameEvent_Event()
}

type GameEvent_BallLeftFieldTouchLine struct {
	BallLeftFieldTouchLine *GameEvent_BallLeftField `protobuf:"bytes,3,opt,name=ball_left_field_touch_line,json=ballLeftFieldTouchLine,proto3,oneof"`
}

type GameEvent_BallLeftFieldGoalLine struct {
	BallLeftFieldGoalLine *GameEvent_BallLeftField `protobuf:"bytes,4,opt,name=ball_left_field_goal_line,json=ballLeftFieldGoalLine,proto3,oneof"`
}

type GameEvent_BallLeftFieldBoundary_ struct {
	BallLeftFieldBoundary *GameEvent_BallLeftFieldBoundary `protobuf:"bytes,5,opt,name=ball_left_field_boundary,json=ballLeftFieldBoundary,proto3,oneof"`
}

type GameEvent_AimlessKick_ struct {
	AimlessKick *GameEvent_AimlessKick `protobuf:"bytes,6,opt,name=aimless_kick,json=aimlessKick,proto3,oneof"`
}

type GameEvent_GoalkeeperHeldBall_ struct {
	GoalkeeperHeldBall *GameEvent_GoalkeeperHeldBall `protobuf:"bytes,7,opt,name=goalkeeper_held_ball,json=goalkeeperHeldBall,proto3,oneof"`
}

type GameEvent_RobotTooCloseToDefenseArea_ struct {
	RobotTooCloseToDefenseArea *GameEvent_RobotTooCloseToDefenseArea `protobuf:"bytes,8,opt,name=robot_too_close_to_defense_area,json=robotTooCloseToDefenseArea,proto3,oneof"`
}

type GameEvent_RobotInDefenseArea_ struct {
	RobotInDefenseArea *GameEvent_RobotInDefenseArea `protobuf:"bytes,9,opt,name=robot_in_defense_area,json=robotInDefenseArea,proto3,oneof"`
}

type GameEvent_RobotPushedRobot_ struct {
	RobotPushedRobot *GameEvent_RobotPushedRobot `protobuf:"bytes,10,opt,name=robot_pushed_robot,json=robotPushedRobot,proto3,oneof"`
}

type GameEvent_RobotHeldBallDeliberately_ struct {
	RobotHeldBallDeliberately *GameEvent_RobotHeldBallDeliberately `protobuf:"bytes,11,opt,name=robot_held_ball_deliberately,json=robotHeldBallDeliberately,proto3,oneof"`
}

type GameEvent_RobotDribbledBallTooFar_ struct {
	RobotDribbledBallTooFar *GameEvent_RobotDribbledBallTooFar `protobuf:"bytes,12,opt,name=robot_dribbled_ball_too_far,json=robotDribbledBallTooFar,proto3,oneof"`
}

type GameEvent_RobotTippedOver_ struct {
	RobotTippedOver *GameEvent_RobotTippedOver `protobuf:"bytes,13,opt,name=robot_tipped_over,json=robotTippedOver,proto3,oneof"`
}

type GameEvent_RobotTouchedBallInDefenseArea_ struct {
	RobotTouchedBallInDefenseArea *GameEvent_RobotTouchedBallInDefenseArea `protobuf:"bytes,14,opt,name=robot_touched_ball_in_defense_area,json=robotTouchedBallInDefenseArea,proto3,oneof"`
}

type GameEvent_RobotKickedBallTooFast_ struct {
	RobotKickedBallTooFast *GameEvent_RobotKickedBallTooFast `protobuf:"bytes,15,opt,name=robot_kicked_ball_too_fast,json=robotKickedBallTooFast,proto3,oneof"`
}

type GameEvent_RobotCrashUnique_ struct {
	RobotCrashUnique *GameEvent_RobotCrashUnique `protobuf:"bytes,16,opt,name=robot_crash_unique,json=robotCrashUnique,proto3,oneof"`
}

type GameEvent_RobotCrashDrawn_ struct {
	RobotCrashDrawn *GameEvent_RobotCrashDrawn `protobuf:"bytes,17,opt,name=robot_crash_drawn,json=robotCrashDrawn,proto3,oneof"`
}

type GameEvent_RobotTooFastInStop_ struct {
	RobotTooFastInStop *GameEvent_RobotTooFastInStop `protobuf:"bytes,18,opt,name=robot_too_fast_in_stop,json=robotTooFastInStop,proto3,oneof"`
}

type GameEvent_RobotTooCloseToKickPoint_ struct {
	RobotTooCloseToKickPoint *GameEvent_RobotTooCloseToKickPoint `protobuf:"bytes,19,opt,name=robot_too_close_to_kick_point,json=robotTooCloseToKickPoint,proto3,oneof"`
}

type GameEvent_RobotInterferedBallPlacement_ struct {
	RobotInterferedBallPlacement *GameEvent_RobotInterferedBallPlacement `protobuf:"bytes,20,opt,name=robot_interfered_ball_placement,json=robotInterferedBallPlacement,proto3,oneof"`
}

type GameEvent_RobotDoubleTouchedBall_ struct {
	RobotDoubleTouchedBall *GameEvent_RobotDoubleTouchedBall `protobuf:"bytes,21,opt,name=robot_double_touched_ball,json=robotDoubleTouchedBall,proto3,oneof"`
}

type GameEvent_NoProgressInGame_ struct {
	NoProgressInGame *GameEvent_NoProgressInGame `protobuf:"bytes,22,opt,name=no_progress_in_game,json=noProgressInGame,proto3,oneof"`
}

type GameEvent_MultipleCards_ struct {
	MultipleCards *GameEvent_MultipleCards `protobuf:"bytes,23,opt,name=multiple_cards,json=multipleCards,proto3,oneof"`
}

type GameEvent_MultipleFouls_ struct {
	MultipleFouls *GameEvent_MultipleFouls `protobuf:"bytes,24,opt,name=multiple_fouls,json=multipleFouls,proto3,oneof"`
}

type GameEvent_TooManyRobots_ struct {
	TooManyRobots *GameEvent_TooManyRobots `protobuf:"bytes,25,opt,name=too_many_robots,json=tooManyRobots,proto3,oneof"`
}

type GameEvent_BallPlacementSucceeded_ struct {
	BallPlacementSucceeded *GameEvent_BallPlacementSucceeded `protobuf:"bytes,26,opt,name=ball_placement_succeeded,json=ballPlacementSucceeded,proto3,oneof"`
}

type GameEvent_BallPlacementFailed_ struct {
	BallPlacementFailed *GameEvent_BallPlacementFailed `protobuf:"bytes,27,opt,name=ball_placement_failed,json=ballPlacementFailed,proto3,oneof"`
}

type GameEvent_PenaltyKickFailed_ struct {
	PenaltyKickFailed *GameEvent_PenaltyKickFailed `protobuf:"bytes,28,opt,name=penalty_kick_failed,json=penaltyKickFailed,proto3,oneof"`
}

type GameEvent_PossibleGoal struct {
	PossibleGoal *GameEvent_Goal `protobuf:"bytes,29,opt,name=possible_goal,json=possibleGoal,proto3,oneof"`
}

type GameEvent_Goal_ struct {
	Goal *GameEvent_Goal `protobuf:"bytes,30,opt,name=goal,proto3,oneof"`
}

type GameEvent_InvalidGoal struct {
	InvalidGoal *GameEvent_Goal `protobuf:"bytes,31,opt,name=invalid_goal,json=invalidGoal,proto3,oneof"`
}

type GameEvent_RobotSubstitution_ struct {
	RobotSubstitution *GameEvent_RobotSubstitution `protobuf:"bytes,32,opt,name=robot_substitution,json=robotSubstitution,proto3,oneof"`
}

type GameEvent_ChallengeFlag_ struct {
	ChallengeFlag *GameEvent_ChallengeFlag `protobuf:"bytes,33,opt,name=challenge_flag,json=challengeFlag,proto3,oneof"`
}

type GameEvent_EmergencyStop_ struct {
	EmergencyStop *GameEvent_EmergencyStop `protobuf:"bytes,34,opt,name=emergency_stop,json=emergencyStop,proto3,oneof"`
}

type GameEvent_UnsportingBehaviorMinor_ struct {
	UnsportingBehaviorMinor *GameEvent_UnsportingBehaviorMinor `protobuf:"bytes,35,opt,name=unsporting_behavior_minor,json=unsportingBehaviorMinor,proto3,oneof"`
}

type GameEvent_UnsportingBehaviorMajor_ struct {
	UnsportingBehaviorMajor *GameEvent_UnsportingBehaviorMajor `protobuf:"bytes,36,opt,name=unsporting_behavior_major,json=unsportingBehaviorMajor,proto3,oneof"`
}

func (*GameEvent_BallLeftFieldTouchLine) isGameEvent_Event() {}

func (*GameEvent_BallLeftFieldGoalLine) isGameEvent_Event() {}

func (*GameEvent_BallLeftFieldBoundary_) isGameEvent_Event() {}

func (*GameEvent_AimlessKick_) isGameEvent_Event() {}

func (*GameEvent_GoalkeeperHeldBall_) isGameEvent_Event() {}

func (*GameEvent_RobotTooCloseToDefenseArea_) isGameEvent_Event() {}

func (*GameEvent_RobotInDefenseArea_) isGameEvent_Event() {}

func (*GameEvent_RobotPushedRobot_) isGameEvent_Event() {}

func (*GameEvent_RobotHeldBallDeliberately_) isGameEvent_Event() {}

func (*GameEvent_RobotDribbledBallTooFar_) isGameEvent_Event() {}

func (*GameEvent_RobotTippedOver_) isGameEvent_Event() {}

func (*GameEvent_RobotTouchedBallInDefenseArea_) isGameEvent_Event() {}

func (*GameEvent_RobotKickedBallTooFast_) isGameEvent_Event() {}

func (*GameEvent_RobotCrashUnique_) isGameEvent_Event() {}

func (*GameEvent_RobotCrashDrawn_) isGameEvent_Event() {}

func (*GameEvent_RobotTooFastInStop_) isGameEvent_Event() {}

func (*GameEvent_RobotTooCloseToKickPoint_) isGameEvent_Event() {}

func (*GameEvent_RobotInterferedBallPlacement_) isGameEvent_Event() {}

func (*GameEvent_RobotDoubleTouchedBall_) isGameEvent_Event() {}

func (*GameEvent_NoProgressInGame_) isGameEvent_Event() {}

func (*GameEvent_MultipleCards_) isGameEvent_Event() {}

func (*GameEvent_MultipleFouls_) isGameEvent_Event() {}

func (*GameEvent_TooManyRobots_) isGameEvent_Event() {}

func (*GameEvent_BallPlacementSucceeded_) isGameEvent_Event() {}

func (*GameEvent_BallPlacementFailed_) isGameEvent_Event() {}

func (*GameEvent_PenaltyKickFailed_) isGameEvent_Event() {}

func (*GameEvent_PossibleGoal) isGameEvent_Event() {}

func (*GameEvent_Goal_) isGameEvent_Event() {}

func (*GameEvent_InvalidGoal) isGameEvent_Event() {}

func (*GameEvent_RobotSubstitution_) isGameEvent_Event() {}

func (*GameEvent_ChallengeFlag_) isGameEvent_Event() {}

func (*GameEvent_EmergencyStop_) isGameEvent_Event() {}

func (*GameEvent_UnsportingBehaviorMinor_) isGameEvent_Event() {}

func (*GameEvent_UnsportingBehaviorMajor_) isGameEvent_Event() {}

type GameEvent_BallLeftField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam            Team      `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	ByRobot           *RobotId  `protobuf:"bytes,2,opt,name=by_robot,json=byRobot,proto3" json:"by_robot,omitempty"`
	LeftFieldPosition *Point2Df `protobuf:"bytes,3,opt,name=left_field_position,json=leftFieldPosition,proto3" json:"left_field_position,omitempty"`
}

func (x *GameEvent_BallLeftField) Reset() {
	*x = GameEvent_BallLeftField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_BallLeftField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_BallLeftField) ProtoMessage() {}

func (x *GameEvent_BallLeftField) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_BallLeftField.ProtoReflect.Descriptor instead.
func (*GameEvent_BallLeftField) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GameEvent_BallLeftField) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_BallLeftField) GetByRobot() *RobotId {
	if x != nil {
		return x.ByRobot
	}
	return nil
}

func (x *GameEvent_BallLeftField) GetLeftFieldPosition() *Point2Df {
	if x != nil {
		return x.LeftFieldPosition
	}
	return nil
}

type GameEvent_BallLeftFieldBoundary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam                    Team      `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	LeftFieldBoundaryPosition *Point2Df `protobuf:"bytes,2,opt,name=left_field_boundary_position,json=leftFieldBoundaryPosition,proto3" json:"left_field_boundary_position,omitempty"`
}

func (x *GameEvent_BallLeftFieldBoundary) Reset() {
	*x = GameEvent_BallLeftFieldBoundary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_BallLeftFieldBoundary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_BallLeftFieldBoundary) ProtoMessage() {}

func (x *GameEvent_BallLeftFieldBoundary) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_BallLeftFieldBoundary.ProtoReflect.Descriptor instead.
func (*GameEvent_BallLeftFieldBoundary) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 1}
}

func (x *GameEvent_BallLeftFieldBoundary) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_BallLeftFieldBoundary) GetLeftFieldBoundaryPosition() *Point2Df {
	if x != nil {
		return x.LeftFieldBoundaryPosition
	}
	return nil
}

type GameEvent_AimlessKick struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam            Team      `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	ByRobot           *RobotId  `protobuf:"bytes,2,opt,name=by_robot,json=byRobot,proto3" json:"by_robot,omitempty"`
	LeftFieldPosition *Point2Df `protobuf:"bytes,3,opt,name=left_field_position,json=leftFieldPosition,proto3" json:"left_field_position,omitempty"`
	KickPosition      *Point2Df `protobuf:"bytes,4,opt,name=kick_position,json=kickPosition,proto3" json:"kick_position,omitempty"`
}

func (x *GameEvent_AimlessKick) Reset() {
	*x = GameEvent_AimlessKick{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_AimlessKick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_AimlessKick) ProtoMessage() {}

func (x *GameEvent_AimlessKick) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_AimlessKick.ProtoReflect.Descriptor instead.
func (*GameEvent_AimlessKick) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 2}
}

func (x *GameEvent_AimlessKick) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_AimlessKick) GetByRobot() *RobotId {
	if x != nil {
		return x.ByRobot
	}
	return nil
}

func (x *GameEvent_AimlessKick) GetLeftFieldPosition() *Point2Df {
	if x != nil {
		return x.LeftFieldPosition
	}
	return nil
}

func (x *GameEvent_AimlessKick) GetKickPosition() *Point2Df {
	if x != nil {
		return x.KickPosition
	}
	return nil
}

type GameEvent_GoalkeeperHeldBall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam       Team                 `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	BallPosition *Point2Df            `protobuf:"bytes,2,opt,name=ball_position,json=ballPosition,proto3" json:"ball_position,omitempty"`
	Duration     *durationpb.Duration `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *GameEvent_GoalkeeperHeldBall) Reset() {
	*x = GameEvent_GoalkeeperHeldBall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_GoalkeeperHeldBall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_GoalkeeperHeldBall) ProtoMessage() {}

func (x *GameEvent_GoalkeeperHeldBall) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_GoalkeeperHeldBall.ProtoReflect.Descriptor instead.
func (*GameEvent_GoalkeeperHeldBall) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 3}
}

func (x *GameEvent_GoalkeeperHeldBall) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_GoalkeeperHeldBall) GetBallPosition() *Point2Df {
	if x != nil {
		return x.BallPosition
	}
	return nil
}

func (x *GameEvent_GoalkeeperHeldBall) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type GameEvent_RobotTooCloseToDefenseArea struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam                Team      `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	ByRobot               *RobotId  `protobuf:"bytes,2,opt,name=by_robot,json=byRobot,proto3" json:"by_robot,omitempty"`
	RobotPosition         *Point2Df `protobuf:"bytes,3,opt,name=robot_position,json=robotPosition,proto3" json:"robot_position,omitempty"`
	DistanceToDefenseArea float32   `protobuf:"fixed32,4,opt,name=distance_to_defense_area,json=distanceToDefenseArea,proto3" json:"distance_to_defense_area,omitempty"`
	BallPosition          *Point2Df `protobuf:"bytes,5,opt,name=ball_position,json=ballPosition,proto3" json:"ball_position,omitempty"`
}

func (x *GameEvent_RobotTooCloseToDefenseArea) Reset() {
	*x = GameEvent_RobotTooCloseToDefenseArea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_RobotTooCloseToDefenseArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_RobotTooCloseToDefenseArea) ProtoMessage() {}

func (x *GameEvent_RobotTooCloseToDefenseArea) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_RobotTooCloseToDefenseArea.ProtoReflect.Descriptor instead.
func (*GameEvent_RobotTooCloseToDefenseArea) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 4}
}

func (x *GameEvent_RobotTooCloseToDefenseArea) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_RobotTooCloseToDefenseArea) GetByRobot() *RobotId {
	if x != nil {
		return x.ByRobot
	}
	return nil
}

func (x *GameEvent_RobotTooCloseToDefenseArea) GetRobotPosition() *Point2Df {
	if x != nil {
		return x.RobotPosition
	}
	return nil
}

func (x *GameEvent_RobotTooCloseToDefenseArea) GetDistanceToDefenseArea() float32 {
	if x != nil {
		return x.DistanceToDefenseArea
	}
	return 0
}

func (x *GameEvent_RobotTooCloseToDefenseArea) GetBallPosition() *Point2Df {
	if x != nil {
		return x.BallPosition
	}
	return nil
}

type GameEvent_RobotInDefenseArea struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam                            Team      `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	ByRobot                           *RobotId  `protobuf:"bytes,2,opt,name=by_robot,json=byRobot,proto3" json:"by_robot,omitempty"`
	RobotPosition                     *Point2Df `protobuf:"bytes,3,opt,name=robot_position,json=robotPosition,proto3" json:"robot_position,omitempty"`
	DistanceToNearestPointOutsideArea float32   `protobuf:"fixed32,4,opt,name=distance_to_nearest_point_outside_area,json=distanceToNearestPointOutsideArea,proto3" json:"distance_to_nearest_point_outside_area,omitempty"`
}

func (x *GameEvent_RobotInDefenseArea) Reset() {
	*x = GameEvent_RobotInDefenseArea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_RobotInDefenseArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_RobotInDefenseArea) ProtoMessage() {}

func (x *GameEvent_RobotInDefenseArea) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_RobotInDefenseArea.ProtoReflect.Descriptor instead.
func (*GameEvent_RobotInDefenseArea) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 5}
}

func (x *GameEvent_RobotInDefenseArea) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_RobotInDefenseArea) GetByRobot() *RobotId {
	if x != nil {
		return x.ByRobot
	}
	return nil
}

func (x *GameEvent_RobotInDefenseArea) GetRobotPosition() *Point2Df {
	if x != nil {
		return x.RobotPosition
	}
	return nil
}

func (x *GameEvent_RobotInDefenseArea) GetDistanceToNearestPointOutsideArea() float32 {
	if x != nil {
		return x.DistanceToNearestPointOutsideArea
	}
	return 0
}

type GameEvent_RobotPushedRobot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam         Team      `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	ViolatorRobot  *RobotId  `protobuf:"bytes,2,opt,name=violator_robot,json=violatorRobot,proto3" json:"violator_robot,omitempty"`
	VictimRobot    *RobotId  `protobuf:"bytes,3,opt,name=victim_robot,json=victimRobot,proto3" json:"victim_robot,omitempty"`
	Position       *Point2Df `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	PushedDistance float32   `protobuf:"fixed32,5,opt,name=pushed_distance,json=pushedDistance,proto3" json:"pushed_distance,omitempty"`
}

func (x *GameEvent_RobotPushedRobot) Reset() {
	*x = GameEvent_RobotPushedRobot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_RobotPushedRobot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_RobotPushedRobot) ProtoMessage() {}

func (x *GameEvent_RobotPushedRobot) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_RobotPushedRobot.ProtoReflect.Descriptor instead.
func (*GameEvent_RobotPushedRobot) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 6}
}

func (x *GameEvent_RobotPushedRobot) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_RobotPushedRobot) GetViolatorRobot() *RobotId {
	if x != nil {
		return x.ViolatorRobot
	}
	return nil
}

func (x *GameEvent_RobotPushedRobot) GetVictimRobot() *RobotId {
	if x != nil {
		return x.VictimRobot
	}
	return nil
}

func (x *GameEvent_RobotPushedRobot) GetPosition() *Point2Df {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *GameEvent_RobotPushedRobot) GetPushedDistance() float32 {
	if x != nil {
		return x.PushedDistance
	}
	return 0
}

type GameEvent_RobotHeldBallDeliberately struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam       Team                 `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	ByRobot      *RobotId             `protobuf:"bytes,2,opt,name=by_robot,json=byRobot,proto3" json:"by_robot,omitempty"`
	BallPosition *Point2Df            `protobuf:"bytes,3,opt,name=ball_position,json=ballPosition,proto3" json:"ball_position,omitempty"`
	Duration     *durationpb.Duration `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *GameEvent_RobotHeldBallDeliberately) Reset() {
	*x = GameEvent_RobotHeldBallDeliberately{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_RobotHeldBallDeliberately) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_RobotHeldBallDeliberately) ProtoMessage() {}

func (x *GameEvent_RobotHeldBallDeliberately) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_RobotHeldBallDeliberately.ProtoReflect.Descriptor instead.
func (*GameEvent_RobotHeldBallDeliberately) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 7}
}

func (x *GameEvent_RobotHeldBallDeliberately) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_RobotHeldBallDeliberately) GetByRobot() *RobotId {
	if x != nil {
		return x.ByRobot
	}
	return nil
}

func (x *GameEvent_RobotHeldBallDeliberately) GetBallPosition() *Point2Df {
	if x != nil {
		return x.BallPosition
	}
	return nil
}

func (x *GameEvent_RobotHeldBallDeliberately) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type GameEvent_RobotDribbledBallTooFar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam        Team      `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	ByRobot       *RobotId  `protobuf:"bytes,2,opt,name=by_robot,json=byRobot,proto3" json:"by_robot,omitempty"`
	StartPosition *Point2Df `protobuf:"bytes,3,opt,name=start_position,json=startPosition,proto3" json:"start_position,omitempty"`
	EndPosition   *Point2Df `protobuf:"bytes,4,opt,name=end_position,json=endPosition,proto3" json:"end_position,omitempty"`
}

func (x *GameEvent_RobotDribbledBallTooFar) Reset() {
	*x = GameEvent_RobotDribbledBallTooFar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_RobotDribbledBallTooFar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_RobotDribbledBallTooFar) ProtoMessage() {}

func (x *GameEvent_RobotDribbledBallTooFar) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_RobotDribbledBallTooFar.ProtoReflect.Descriptor instead.
func (*GameEvent_RobotDribbledBallTooFar) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 8}
}

func (x *GameEvent_RobotDribbledBallTooFar) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_RobotDribbledBallTooFar) GetByRobot() *RobotId {
	if x != nil {
		return x.ByRobot
	}
	return nil
}

func (x *GameEvent_RobotDribbledBallTooFar) GetStartPosition() *Point2Df {
	if x != nil {
		return x.StartPosition
	}
	return nil
}

func (x *GameEvent_RobotDribbledBallTooFar) GetEndPosition() *Point2Df {
	if x != nil {
		return x.EndPosition
	}
	return nil
}

type GameEvent_RobotTippedOver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam        Team      `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	ByRobot       *RobotId  `protobuf:"bytes,2,opt,name=by_robot,json=byRobot,proto3" json:"by_robot,omitempty"`
	RobotPosition *Point2Df `protobuf:"bytes,3,opt,name=robot_position,json=robotPosition,proto3" json:"robot_position,omitempty"`
	BallPosition  *Point2Df `protobuf:"bytes,4,opt,name=ball_position,json=ballPosition,proto3" json:"ball_position,omitempty"`
}

func (x *GameEvent_RobotTippedOver) Reset() {
	*x = GameEvent_RobotTippedOver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_RobotTippedOver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_RobotTippedOver) ProtoMessage() {}

func (x *GameEvent_RobotTippedOver) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_RobotTippedOver.ProtoReflect.Descriptor instead.
func (*GameEvent_RobotTippedOver) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 9}
}

func (x *GameEvent_RobotTippedOver) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_RobotTippedOver) GetByRobot() *RobotId {
	if x != nil {
		return x.ByRobot
	}
	return nil
}

func (x *GameEvent_RobotTippedOver) GetRobotPosition() *Point2Df {
	if x != nil {
		return x.RobotPosition
	}
	return nil
}

func (x *GameEvent_RobotTippedOver) GetBallPosition() *Point2Df {
	if x != nil {
		return x.BallPosition
	}
	return nil
}

type GameEvent_RobotTouchedBallInDefenseArea struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam                            Team      `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	ByRobot                           *RobotId  `protobuf:"bytes,2,opt,name=by_robot,json=byRobot,proto3" json:"by_robot,omitempty"`
	RobotPosition                     *Point2Df `protobuf:"bytes,3,opt,name=robot_position,json=robotPosition,proto3" json:"robot_position,omitempty"`
	DistanceToNearestPointOutsideArea float32   `protobuf:"fixed32,4,opt,name=distance_to_nearest_point_outside_area,json=distanceToNearestPointOutsideArea,proto3" json:"distance_to_nearest_point_outside_area,omitempty"`
}

func (x *GameEvent_RobotTouchedBallInDefenseArea) Reset() {
	*x = GameEvent_RobotTouchedBallInDefenseArea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_RobotTouchedBallInDefenseArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_RobotTouchedBallInDefenseArea) ProtoMessage() {}

func (x *GameEvent_RobotTouchedBallInDefenseArea) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_RobotTouchedBallInDefenseArea.ProtoReflect.Descriptor instead.
func (*GameEvent_RobotTouchedBallInDefenseArea) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 10}
}

func (x *GameEvent_RobotTouchedBallInDefenseArea) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_RobotTouchedBallInDefenseArea) GetByRobot() *RobotId {
	if x != nil {
		return x.ByRobot
	}
	return nil
}

func (x *GameEvent_RobotTouchedBallInDefenseArea) GetRobotPosition() *Point2Df {
	if x != nil {
		return x.RobotPosition
	}
	return nil
}

func (x *GameEvent_RobotTouchedBallInDefenseArea) GetDistanceToNearestPointOutsideArea() float32 {
	if x != nil {
		return x.DistanceToNearestPointOutsideArea
	}
	return 0
}

type GameEvent_RobotKickedBallTooFast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam                     Team      `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	ByRobot                    *RobotId  `protobuf:"bytes,2,opt,name=by_robot,json=byRobot,proto3" json:"by_robot,omitempty"`
	BallAtHighestSpeedPosition *Point2Df `protobuf:"bytes,3,opt,name=ball_at_highest_speed_position,json=ballAtHighestSpeedPosition,proto3" json:"ball_at_highest_speed_position,omitempty"`
	InitialBallSpeed           float32   `protobuf:"fixed32,4,opt,name=initial_ball_speed,json=initialBallSpeed,proto3" json:"initial_ball_speed,omitempty"`
	WasChippedKick             bool      `protobuf:"varint,5,opt,name=was_chipped_kick,json=wasChippedKick,proto3" json:"was_chipped_kick,omitempty"`
}

func (x *GameEvent_RobotKickedBallTooFast) Reset() {
	*x = GameEvent_RobotKickedBallTooFast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_RobotKickedBallTooFast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_RobotKickedBallTooFast) ProtoMessage() {}

func (x *GameEvent_RobotKickedBallTooFast) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_RobotKickedBallTooFast.ProtoReflect.Descriptor instead.
func (*GameEvent_RobotKickedBallTooFast) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 11}
}

func (x *GameEvent_RobotKickedBallTooFast) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_RobotKickedBallTooFast) GetByRobot() *RobotId {
	if x != nil {
		return x.ByRobot
	}
	return nil
}

func (x *GameEvent_RobotKickedBallTooFast) GetBallAtHighestSpeedPosition() *Point2Df {
	if x != nil {
		return x.BallAtHighestSpeedPosition
	}
	return nil
}

func (x *GameEvent_RobotKickedBallTooFast) GetInitialBallSpeed() float32 {
	if x != nil {
		return x.InitialBallSpeed
	}
	return 0
}

func (x *GameEvent_RobotKickedBallTooFast) GetWasChippedKick() bool {
	if x != nil {
		return x.WasChippedKick
	}
	return false
}

type GameEvent_RobotCrashUnique struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam          Team      `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	ViolatorRobot   *RobotId  `protobuf:"bytes,2,opt,name=violator_robot,json=violatorRobot,proto3" json:"violator_robot,omitempty"`
	VictimRobot     *RobotId  `protobuf:"bytes,3,opt,name=victim_robot,json=victimRobot,proto3" json:"victim_robot,omitempty"`
	CrashPosition   *Point2Df `protobuf:"bytes,4,opt,name=crash_position,json=crashPosition,proto3" json:"crash_position,omitempty"`
	CrashSpeed      float32   `protobuf:"fixed32,5,opt,name=crash_speed,json=crashSpeed,proto3" json:"crash_speed,omitempty"`
	SpeedDifference float32   `protobuf:"fixed32,6,opt,name=speed_difference,json=speedDifference,proto3" json:"speed_difference,omitempty"`
	CrashAngle      float32   `protobuf:"fixed32,7,opt,name=crash_angle,json=crashAngle,proto3" json:"crash_angle,omitempty"`
}

func (x *GameEvent_RobotCrashUnique) Reset() {
	*x = GameEvent_RobotCrashUnique{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_RobotCrashUnique) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_RobotCrashUnique) ProtoMessage() {}

func (x *GameEvent_RobotCrashUnique) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_RobotCrashUnique.ProtoReflect.Descriptor instead.
func (*GameEvent_RobotCrashUnique) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 12}
}

func (x *GameEvent_RobotCrashUnique) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_RobotCrashUnique) GetViolatorRobot() *RobotId {
	if x != nil {
		return x.ViolatorRobot
	}
	return nil
}

func (x *GameEvent_RobotCrashUnique) GetVictimRobot() *RobotId {
	if x != nil {
		return x.VictimRobot
	}
	return nil
}

func (x *GameEvent_RobotCrashUnique) GetCrashPosition() *Point2Df {
	if x != nil {
		return x.CrashPosition
	}
	return nil
}

func (x *GameEvent_RobotCrashUnique) GetCrashSpeed() float32 {
	if x != nil {
		return x.CrashSpeed
	}
	return 0
}

func (x *GameEvent_RobotCrashUnique) GetSpeedDifference() float32 {
	if x != nil {
		return x.SpeedDifference
	}
	return 0
}

func (x *GameEvent_RobotCrashUnique) GetCrashAngle() float32 {
	if x != nil {
		return x.CrashAngle
	}
	return 0
}

type GameEvent_RobotCrashDrawn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomeRobotId     *RobotId  `protobuf:"bytes,1,opt,name=home_robot_id,json=homeRobotId,proto3" json:"home_robot_id,omitempty"`
	AwayRobotId     *RobotId  `protobuf:"bytes,2,opt,name=away_robot_id,json=awayRobotId,proto3" json:"away_robot_id,omitempty"`
	CrashPosition   *Point2Df `protobuf:"bytes,3,opt,name=crash_position,json=crashPosition,proto3" json:"crash_position,omitempty"`
	CrashSpeed      float32   `protobuf:"fixed32,4,opt,name=crash_speed,json=crashSpeed,proto3" json:"crash_speed,omitempty"`
	SpeedDifference float32   `protobuf:"fixed32,5,opt,name=speed_difference,json=speedDifference,proto3" json:"speed_difference,omitempty"`
	CrashAngle      float32   `protobuf:"fixed32,6,opt,name=crash_angle,json=crashAngle,proto3" json:"crash_angle,omitempty"`
}

func (x *GameEvent_RobotCrashDrawn) Reset() {
	*x = GameEvent_RobotCrashDrawn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_RobotCrashDrawn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_RobotCrashDrawn) ProtoMessage() {}

func (x *GameEvent_RobotCrashDrawn) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_RobotCrashDrawn.ProtoReflect.Descriptor instead.
func (*GameEvent_RobotCrashDrawn) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 13}
}

func (x *GameEvent_RobotCrashDrawn) GetHomeRobotId() *RobotId {
	if x != nil {
		return x.HomeRobotId
	}
	return nil
}

func (x *GameEvent_RobotCrashDrawn) GetAwayRobotId() *RobotId {
	if x != nil {
		return x.AwayRobotId
	}
	return nil
}

func (x *GameEvent_RobotCrashDrawn) GetCrashPosition() *Point2Df {
	if x != nil {
		return x.CrashPosition
	}
	return nil
}

func (x *GameEvent_RobotCrashDrawn) GetCrashSpeed() float32 {
	if x != nil {
		return x.CrashSpeed
	}
	return 0
}

func (x *GameEvent_RobotCrashDrawn) GetSpeedDifference() float32 {
	if x != nil {
		return x.SpeedDifference
	}
	return 0
}

func (x *GameEvent_RobotCrashDrawn) GetCrashAngle() float32 {
	if x != nil {
		return x.CrashAngle
	}
	return 0
}

type GameEvent_RobotTooFastInStop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam        Team      `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	ByRobot       *RobotId  `protobuf:"bytes,2,opt,name=by_robot,json=byRobot,proto3" json:"by_robot,omitempty"`
	RobotPosition *Point2Df `protobuf:"bytes,3,opt,name=robot_position,json=robotPosition,proto3" json:"robot_position,omitempty"`
	RobotSpeed    float32   `protobuf:"fixed32,4,opt,name=robot_speed,json=robotSpeed,proto3" json:"robot_speed,omitempty"`
}

func (x *GameEvent_RobotTooFastInStop) Reset() {
	*x = GameEvent_RobotTooFastInStop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_RobotTooFastInStop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_RobotTooFastInStop) ProtoMessage() {}

func (x *GameEvent_RobotTooFastInStop) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_RobotTooFastInStop.ProtoReflect.Descriptor instead.
func (*GameEvent_RobotTooFastInStop) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 14}
}

func (x *GameEvent_RobotTooFastInStop) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_RobotTooFastInStop) GetByRobot() *RobotId {
	if x != nil {
		return x.ByRobot
	}
	return nil
}

func (x *GameEvent_RobotTooFastInStop) GetRobotPosition() *Point2Df {
	if x != nil {
		return x.RobotPosition
	}
	return nil
}

func (x *GameEvent_RobotTooFastInStop) GetRobotSpeed() float32 {
	if x != nil {
		return x.RobotSpeed
	}
	return 0
}

type GameEvent_RobotTooCloseToKickPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam        Team      `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	ByRobot       *RobotId  `protobuf:"bytes,2,opt,name=by_robot,json=byRobot,proto3" json:"by_robot,omitempty"`
	RobotPosition *Point2Df `protobuf:"bytes,3,opt,name=robot_position,json=robotPosition,proto3" json:"robot_position,omitempty"`
	RobotDistance float32   `protobuf:"fixed32,4,opt,name=robot_distance,json=robotDistance,proto3" json:"robot_distance,omitempty"`
}

func (x *GameEvent_RobotTooCloseToKickPoint) Reset() {
	*x = GameEvent_RobotTooCloseToKickPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_RobotTooCloseToKickPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_RobotTooCloseToKickPoint) ProtoMessage() {}

func (x *GameEvent_RobotTooCloseToKickPoint) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_RobotTooCloseToKickPoint.ProtoReflect.Descriptor instead.
func (*GameEvent_RobotTooCloseToKickPoint) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 15}
}

func (x *GameEvent_RobotTooCloseToKickPoint) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_RobotTooCloseToKickPoint) GetByRobot() *RobotId {
	if x != nil {
		return x.ByRobot
	}
	return nil
}

func (x *GameEvent_RobotTooCloseToKickPoint) GetRobotPosition() *Point2Df {
	if x != nil {
		return x.RobotPosition
	}
	return nil
}

func (x *GameEvent_RobotTooCloseToKickPoint) GetRobotDistance() float32 {
	if x != nil {
		return x.RobotDistance
	}
	return 0
}

type GameEvent_RobotInterferedBallPlacement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam        Team      `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	ByRobot       *RobotId  `protobuf:"bytes,2,opt,name=by_robot,json=byRobot,proto3" json:"by_robot,omitempty"`
	RobotPosition *Point2Df `protobuf:"bytes,3,opt,name=robot_position,json=robotPosition,proto3" json:"robot_position,omitempty"`
}

func (x *GameEvent_RobotInterferedBallPlacement) Reset() {
	*x = GameEvent_RobotInterferedBallPlacement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_RobotInterferedBallPlacement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_RobotInterferedBallPlacement) ProtoMessage() {}

func (x *GameEvent_RobotInterferedBallPlacement) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_RobotInterferedBallPlacement.ProtoReflect.Descriptor instead.
func (*GameEvent_RobotInterferedBallPlacement) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 16}
}

func (x *GameEvent_RobotInterferedBallPlacement) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_RobotInterferedBallPlacement) GetByRobot() *RobotId {
	if x != nil {
		return x.ByRobot
	}
	return nil
}

func (x *GameEvent_RobotInterferedBallPlacement) GetRobotPosition() *Point2Df {
	if x != nil {
		return x.RobotPosition
	}
	return nil
}

type GameEvent_RobotDoubleTouchedBall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam       Team      `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	ByRobot      *RobotId  `protobuf:"bytes,2,opt,name=by_robot,json=byRobot,proto3" json:"by_robot,omitempty"`
	BallPosition *Point2Df `protobuf:"bytes,3,opt,name=ball_position,json=ballPosition,proto3" json:"ball_position,omitempty"`
}

func (x *GameEvent_RobotDoubleTouchedBall) Reset() {
	*x = GameEvent_RobotDoubleTouchedBall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_RobotDoubleTouchedBall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_RobotDoubleTouchedBall) ProtoMessage() {}

func (x *GameEvent_RobotDoubleTouchedBall) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_RobotDoubleTouchedBall.ProtoReflect.Descriptor instead.
func (*GameEvent_RobotDoubleTouchedBall) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 17}
}

func (x *GameEvent_RobotDoubleTouchedBall) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_RobotDoubleTouchedBall) GetByRobot() *RobotId {
	if x != nil {
		return x.ByRobot
	}
	return nil
}

func (x *GameEvent_RobotDoubleTouchedBall) GetBallPosition() *Point2Df {
	if x != nil {
		return x.BallPosition
	}
	return nil
}

type GameEvent_NoProgressInGame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BallPosition *Point2Df            `protobuf:"bytes,1,opt,name=ball_position,json=ballPosition,proto3" json:"ball_position,omitempty"`
	Duration     *durationpb.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *GameEvent_NoProgressInGame) Reset() {
	*x = GameEvent_NoProgressInGame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_NoProgressInGame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_NoProgressInGame) ProtoMessage() {}

func (x *GameEvent_NoProgressInGame) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_NoProgressInGame.ProtoReflect.Descriptor instead.
func (*GameEvent_NoProgressInGame) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 18}
}

func (x *GameEvent_NoProgressInGame) GetBallPosition() *Point2Df {
	if x != nil {
		return x.BallPosition
	}
	return nil
}

func (x *GameEvent_NoProgressInGame) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type GameEvent_MultipleCards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam Team `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
}

func (x *GameEvent_MultipleCards) Reset() {
	*x = GameEvent_MultipleCards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_MultipleCards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_MultipleCards) ProtoMessage() {}

func (x *GameEvent_MultipleCards) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_MultipleCards.ProtoReflect.Descriptor instead.
func (*GameEvent_MultipleCards) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 19}
}

func (x *GameEvent_MultipleCards) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

type GameEvent_MultipleFouls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam Team `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
}

func (x *GameEvent_MultipleFouls) Reset() {
	*x = GameEvent_MultipleFouls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_MultipleFouls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_MultipleFouls) ProtoMessage() {}

func (x *GameEvent_MultipleFouls) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_MultipleFouls.ProtoReflect.Descriptor instead.
func (*GameEvent_MultipleFouls) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 20}
}

func (x *GameEvent_MultipleFouls) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

type GameEvent_TooManyRobots struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam           Team      `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	NumRobotsAllowed uint32    `protobuf:"varint,2,opt,name=num_robots_allowed,json=numRobotsAllowed,proto3" json:"num_robots_allowed,omitempty"`
	NumRobotsOnField uint32    `protobuf:"varint,3,opt,name=num_robots_on_field,json=numRobotsOnField,proto3" json:"num_robots_on_field,omitempty"`
	BallPosition     *Point2Df `protobuf:"bytes,4,opt,name=ball_position,json=ballPosition,proto3" json:"ball_position,omitempty"`
}

func (x *GameEvent_TooManyRobots) Reset() {
	*x = GameEvent_TooManyRobots{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_TooManyRobots) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_TooManyRobots) ProtoMessage() {}

func (x *GameEvent_TooManyRobots) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_TooManyRobots.ProtoReflect.Descriptor instead.
func (*GameEvent_TooManyRobots) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 21}
}

func (x *GameEvent_TooManyRobots) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_TooManyRobots) GetNumRobotsAllowed() uint32 {
	if x != nil {
		return x.NumRobotsAllowed
	}
	return 0
}

func (x *GameEvent_TooManyRobots) GetNumRobotsOnField() uint32 {
	if x != nil {
		return x.NumRobotsOnField
	}
	return 0
}

func (x *GameEvent_TooManyRobots) GetBallPosition() *Point2Df {
	if x != nil {
		return x.BallPosition
	}
	return nil
}

type GameEvent_BallPlacementSucceeded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam                    Team                 `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	Duration                  *durationpb.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	DistanceToPlacementTarget float32              `protobuf:"fixed32,3,opt,name=distance_to_placement_target,json=distanceToPlacementTarget,proto3" json:"distance_to_placement_target,omitempty"`
	DistanceFromStartPosition float32              `protobuf:"fixed32,4,opt,name=distance_from_start_position,json=distanceFromStartPosition,proto3" json:"distance_from_start_position,omitempty"`
}

func (x *GameEvent_BallPlacementSucceeded) Reset() {
	*x = GameEvent_BallPlacementSucceeded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_BallPlacementSucceeded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_BallPlacementSucceeded) ProtoMessage() {}

func (x *GameEvent_BallPlacementSucceeded) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_BallPlacementSucceeded.ProtoReflect.Descriptor instead.
func (*GameEvent_BallPlacementSucceeded) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 22}
}

func (x *GameEvent_BallPlacementSucceeded) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_BallPlacementSucceeded) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *GameEvent_BallPlacementSucceeded) GetDistanceToPlacementTarget() float32 {
	if x != nil {
		return x.DistanceToPlacementTarget
	}
	return 0
}

func (x *GameEvent_BallPlacementSucceeded) GetDistanceFromStartPosition() float32 {
	if x != nil {
		return x.DistanceFromStartPosition
	}
	return 0
}

type GameEvent_BallPlacementFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam            Team    `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	RemainingDistance float32 `protobuf:"fixed32,2,opt,name=remaining_distance,json=remainingDistance,proto3" json:"remaining_distance,omitempty"`
}

func (x *GameEvent_BallPlacementFailed) Reset() {
	*x = GameEvent_BallPlacementFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_BallPlacementFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_BallPlacementFailed) ProtoMessage() {}

func (x *GameEvent_BallPlacementFailed) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_BallPlacementFailed.ProtoReflect.Descriptor instead.
func (*GameEvent_BallPlacementFailed) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 23}
}

func (x *GameEvent_BallPlacementFailed) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_BallPlacementFailed) GetRemainingDistance() float32 {
	if x != nil {
		return x.RemainingDistance
	}
	return 0
}

type GameEvent_PenaltyKickFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam       Team      `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	BallPosition *Point2Df `protobuf:"bytes,2,opt,name=ball_position,json=ballPosition,proto3" json:"ball_position,omitempty"`
}

func (x *GameEvent_PenaltyKickFailed) Reset() {
	*x = GameEvent_PenaltyKickFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_PenaltyKickFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_PenaltyKickFailed) ProtoMessage() {}

func (x *GameEvent_PenaltyKickFailed) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_PenaltyKickFailed.ProtoReflect.Descriptor instead.
func (*GameEvent_PenaltyKickFailed) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 24}
}

func (x *GameEvent_PenaltyKickFailed) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_PenaltyKickFailed) GetBallPosition() *Point2Df {
	if x != nil {
		return x.BallPosition
	}
	return nil
}

type GameEvent_Goal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam                          Team                   `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	KickingTeam                     Team                   `protobuf:"varint,2,opt,name=kicking_team,json=kickingTeam,proto3,enum=protocols.common.Team" json:"kicking_team,omitempty"`
	KickingRobot                    *RobotId               `protobuf:"bytes,3,opt,name=kicking_robot,json=kickingRobot,proto3" json:"kicking_robot,omitempty"`
	BallPositionWhenScored          *Point2Df              `protobuf:"bytes,4,opt,name=ball_position_when_scored,json=ballPositionWhenScored,proto3" json:"ball_position_when_scored,omitempty"`
	KickPosition                    *Point2Df              `protobuf:"bytes,5,opt,name=kick_position,json=kickPosition,proto3" json:"kick_position,omitempty"`
	MaxBallHeight                   float32                `protobuf:"fixed32,6,opt,name=max_ball_height,json=maxBallHeight,proto3" json:"max_ball_height,omitempty"`
	NumOfRobotsOfScoringTeam        uint32                 `protobuf:"varint,7,opt,name=num_of_robots_of_scoring_team,json=numOfRobotsOfScoringTeam,proto3" json:"num_of_robots_of_scoring_team,omitempty"`
	LastTouchByScoringTeamTimestamp *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_touch_by_scoring_team_timestamp,json=lastTouchByScoringTeamTimestamp,proto3" json:"last_touch_by_scoring_team_timestamp,omitempty"`
	Message                         *string                `protobuf:"bytes,9,opt,name=message,proto3,oneof" json:"message,omitempty"`
}

func (x *GameEvent_Goal) Reset() {
	*x = GameEvent_Goal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_Goal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_Goal) ProtoMessage() {}

func (x *GameEvent_Goal) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_Goal.ProtoReflect.Descriptor instead.
func (*GameEvent_Goal) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 25}
}

func (x *GameEvent_Goal) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_Goal) GetKickingTeam() Team {
	if x != nil {
		return x.KickingTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_Goal) GetKickingRobot() *RobotId {
	if x != nil {
		return x.KickingRobot
	}
	return nil
}

func (x *GameEvent_Goal) GetBallPositionWhenScored() *Point2Df {
	if x != nil {
		return x.BallPositionWhenScored
	}
	return nil
}

func (x *GameEvent_Goal) GetKickPosition() *Point2Df {
	if x != nil {
		return x.KickPosition
	}
	return nil
}

func (x *GameEvent_Goal) GetMaxBallHeight() float32 {
	if x != nil {
		return x.MaxBallHeight
	}
	return 0
}

func (x *GameEvent_Goal) GetNumOfRobotsOfScoringTeam() uint32 {
	if x != nil {
		return x.NumOfRobotsOfScoringTeam
	}
	return 0
}

func (x *GameEvent_Goal) GetLastTouchByScoringTeamTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.LastTouchByScoringTeamTimestamp
	}
	return nil
}

func (x *GameEvent_Goal) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

type GameEvent_RobotSubstitution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam Team `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
}

func (x *GameEvent_RobotSubstitution) Reset() {
	*x = GameEvent_RobotSubstitution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_RobotSubstitution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_RobotSubstitution) ProtoMessage() {}

func (x *GameEvent_RobotSubstitution) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_RobotSubstitution.ProtoReflect.Descriptor instead.
func (*GameEvent_RobotSubstitution) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 26}
}

func (x *GameEvent_RobotSubstitution) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

type GameEvent_ChallengeFlag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam Team `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
}

func (x *GameEvent_ChallengeFlag) Reset() {
	*x = GameEvent_ChallengeFlag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_ChallengeFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_ChallengeFlag) ProtoMessage() {}

func (x *GameEvent_ChallengeFlag) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_ChallengeFlag.ProtoReflect.Descriptor instead.
func (*GameEvent_ChallengeFlag) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 27}
}

func (x *GameEvent_ChallengeFlag) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

type GameEvent_EmergencyStop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam Team `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
}

func (x *GameEvent_EmergencyStop) Reset() {
	*x = GameEvent_EmergencyStop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_EmergencyStop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_EmergencyStop) ProtoMessage() {}

func (x *GameEvent_EmergencyStop) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_EmergencyStop.ProtoReflect.Descriptor instead.
func (*GameEvent_EmergencyStop) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 28}
}

func (x *GameEvent_EmergencyStop) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

type GameEvent_UnsportingBehaviorMinor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam Team   `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *GameEvent_UnsportingBehaviorMinor) Reset() {
	*x = GameEvent_UnsportingBehaviorMinor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_UnsportingBehaviorMinor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_UnsportingBehaviorMinor) ProtoMessage() {}

func (x *GameEvent_UnsportingBehaviorMinor) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_UnsportingBehaviorMinor.ProtoReflect.Descriptor instead.
func (*GameEvent_UnsportingBehaviorMinor) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 29}
}

func (x *GameEvent_UnsportingBehaviorMinor) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_UnsportingBehaviorMinor) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type GameEvent_UnsportingBehaviorMajor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ByTeam Team   `protobuf:"varint,1,opt,name=by_team,json=byTeam,proto3,enum=protocols.common.Team" json:"by_team,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *GameEvent_UnsportingBehaviorMajor) Reset() {
	*x = GameEvent_UnsportingBehaviorMajor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_common_game_event_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameEvent_UnsportingBehaviorMajor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEvent_UnsportingBehaviorMajor) ProtoMessage() {}

func (x *GameEvent_UnsportingBehaviorMajor) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_common_game_event_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEvent_UnsportingBehaviorMajor.ProtoReflect.Descriptor instead.
func (*GameEvent_UnsportingBehaviorMajor) Descriptor() ([]byte, []int) {
	return file_protocols_common_game_event_proto_rawDescGZIP(), []int{0, 30}
}

func (x *GameEvent_UnsportingBehaviorMajor) GetByTeam() Team {
	if x != nil {
		return x.ByTeam
	}
	return Team_TEAM_UNSPECIFIED
}

func (x *GameEvent_UnsportingBehaviorMajor) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_protocols_common_game_event_proto protoreflect.FileDescriptor

var file_protocols_common_game_event_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x74, 0x65, 0x61, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9, 0x4f, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x38, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x67, 0x0a, 0x1a, 0x62, 0x61, 0x6c, 0x6c, 0x5f,
	0x6c, 0x65, 0x66, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x6f, 0x75, 0x63, 0x68,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x4c, 0x65, 0x66,
	0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x48, 0x00, 0x52, 0x16, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x65,
	0x66, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x4c, 0x69, 0x6e, 0x65,
	0x12, 0x65, 0x0a, 0x19, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x4c, 0x65, 0x66, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x48, 0x00,
	0x52, 0x15, 0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x65, 0x66, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x47,
	0x6f, 0x61, 0x6c, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x6c, 0x0a, 0x18, 0x62, 0x61, 0x6c, 0x6c, 0x5f,
	0x6c, 0x65, 0x66, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x4c, 0x65, 0x66, 0x74, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x15,
	0x62, 0x61, 0x6c, 0x6c, 0x4c, 0x65, 0x66, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x61, 0x72, 0x79, 0x12, 0x4c, 0x0a, 0x0c, 0x61, 0x69, 0x6d, 0x6c, 0x65, 0x73, 0x73,
	0x5f, 0x6b, 0x69, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x69, 0x6d, 0x6c, 0x65, 0x73, 0x73,
	0x4b, 0x69, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x69, 0x6d, 0x6c, 0x65, 0x73, 0x73, 0x4b,
	0x69, 0x63, 0x6b, 0x12, 0x62, 0x0a, 0x14, 0x67, 0x6f, 0x61, 0x6c, 0x6b, 0x65, 0x65, 0x70, 0x65,
	0x72, 0x5f, 0x68, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x47,
	0x6f, 0x61, 0x6c, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x48, 0x65, 0x6c, 0x64, 0x42, 0x61, 0x6c,
	0x6c, 0x48, 0x00, 0x52, 0x12, 0x67, 0x6f, 0x61, 0x6c, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x48,
	0x65, 0x6c, 0x64, 0x42, 0x61, 0x6c, 0x6c, 0x12, 0x7d, 0x0a, 0x1f, 0x72, 0x6f, 0x62, 0x6f, 0x74,
	0x5f, 0x74, 0x6f, 0x6f, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x64, 0x65,
	0x66, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x54, 0x6f, 0x6f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x6f, 0x44, 0x65, 0x66,
	0x65, 0x6e, 0x73, 0x65, 0x41, 0x72, 0x65, 0x61, 0x48, 0x00, 0x52, 0x1a, 0x72, 0x6f, 0x62, 0x6f,
	0x74, 0x54, 0x6f, 0x6f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x65, 0x6e,
	0x73, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x63, 0x0a, 0x15, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f,
	0x69, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x6e, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x73,
	0x65, 0x41, 0x72, 0x65, 0x61, 0x48, 0x00, 0x52, 0x12, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x6e,
	0x44, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x5c, 0x0a, 0x12, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x70, 0x75, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x72, 0x6f, 0x62, 0x6f,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x50, 0x75, 0x73, 0x68, 0x65, 0x64,
	0x52, 0x6f, 0x62, 0x6f, 0x74, 0x48, 0x00, 0x52, 0x10, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x50, 0x75,
	0x73, 0x68, 0x65, 0x64, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x78, 0x0a, 0x1c, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x5f, 0x68, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x6c,
	0x69, 0x62, 0x65, 0x72, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x62,
	0x6f, 0x74, 0x48, 0x65, 0x6c, 0x64, 0x42, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x62, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x19, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x48,
	0x65, 0x6c, 0x64, 0x42, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x62, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x6c, 0x79, 0x12, 0x73, 0x0a, 0x1b, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x64, 0x72, 0x69,
	0x62, 0x62, 0x6c, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x74, 0x6f, 0x6f, 0x5f, 0x66,
	0x61, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x44, 0x72, 0x69, 0x62, 0x62,
	0x6c, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x6c, 0x54, 0x6f, 0x6f, 0x46, 0x61, 0x72, 0x48, 0x00, 0x52,
	0x17, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x44, 0x72, 0x69, 0x62, 0x62, 0x6c, 0x65, 0x64, 0x42, 0x61,
	0x6c, 0x6c, 0x54, 0x6f, 0x6f, 0x46, 0x61, 0x72, 0x12, 0x59, 0x0a, 0x11, 0x72, 0x6f, 0x62, 0x6f,
	0x74, 0x5f, 0x74, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x54, 0x69, 0x70, 0x70, 0x65, 0x64, 0x4f, 0x76, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x0f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x54, 0x69, 0x70, 0x70, 0x65, 0x64, 0x4f,
	0x76, 0x65, 0x72, 0x12, 0x86, 0x01, 0x0a, 0x22, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x74, 0x6f,
	0x75, 0x63, 0x68, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x65,
	0x66, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x39, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x6c, 0x49, 0x6e,
	0x44, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x41, 0x72, 0x65, 0x61, 0x48, 0x00, 0x52, 0x1d, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x6c, 0x49,
	0x6e, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x70, 0x0a, 0x1a,
	0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x6b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x6c,
	0x6c, 0x5f, 0x74, 0x6f, 0x6f, 0x5f, 0x66, 0x61, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x4b, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x6c, 0x54, 0x6f, 0x6f,
	0x46, 0x61, 0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x4b, 0x69, 0x63,
	0x6b, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x6c, 0x54, 0x6f, 0x6f, 0x46, 0x61, 0x73, 0x74, 0x12, 0x5c,
	0x0a, 0x12, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x63, 0x72, 0x61, 0x73, 0x68, 0x5f, 0x75, 0x6e,
	0x69, 0x71, 0x75, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x72, 0x61,
	0x73, 0x68, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x48, 0x00, 0x52, 0x10, 0x72, 0x6f, 0x62, 0x6f,
	0x74, 0x43, 0x72, 0x61, 0x73, 0x68, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x59, 0x0a, 0x11,
	0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x63, 0x72, 0x61, 0x73, 0x68, 0x5f, 0x64, 0x72, 0x61, 0x77,
	0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x72, 0x61, 0x73, 0x68, 0x44,
	0x72, 0x61, 0x77, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x72, 0x61,
	0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x6e, 0x12, 0x64, 0x0a, 0x16, 0x72, 0x6f, 0x62, 0x6f, 0x74,
	0x5f, 0x74, 0x6f, 0x6f, 0x5f, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x6f,
	0x70, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x54, 0x6f, 0x6f, 0x46, 0x61, 0x73,
	0x74, 0x49, 0x6e, 0x53, 0x74, 0x6f, 0x70, 0x48, 0x00, 0x52, 0x12, 0x72, 0x6f, 0x62, 0x6f, 0x74,
	0x54, 0x6f, 0x6f, 0x46, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x77, 0x0a,
	0x1d, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x74, 0x6f, 0x6f, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x5f, 0x74, 0x6f, 0x5f, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x54, 0x6f, 0x6f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54,
	0x6f, 0x4b, 0x69, 0x63, 0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x18, 0x72, 0x6f,
	0x62, 0x6f, 0x74, 0x54, 0x6f, 0x6f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x6f, 0x4b, 0x69, 0x63,
	0x6b, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x81, 0x01, 0x0a, 0x1f, 0x72, 0x6f, 0x62, 0x6f, 0x74,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x6c, 0x6c,
	0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x64, 0x42, 0x61, 0x6c,
	0x6c, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x1c, 0x72, 0x6f,
	0x62, 0x6f, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x64, 0x42, 0x61, 0x6c,
	0x6c, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x6f, 0x0a, 0x19, 0x72, 0x6f,
	0x62, 0x6f, 0x74, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x75, 0x63, 0x68,
	0x65, 0x64, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x64, 0x42, 0x61, 0x6c,
	0x6c, 0x48, 0x00, 0x52, 0x16, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x54, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x6c, 0x12, 0x5d, 0x0a, 0x13, 0x6e,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x67, 0x61,
	0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4e, 0x6f, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x10, 0x6e, 0x6f, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x0e, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x73, 0x48, 0x00, 0x52,
	0x0d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x52,
	0x0a, 0x0e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x75, 0x6c, 0x73,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x46, 0x6f, 0x75, 0x6c,
	0x73, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x46, 0x6f, 0x75,
	0x6c, 0x73, 0x12, 0x53, 0x0a, 0x0f, 0x74, 0x6f, 0x6f, 0x5f, 0x6d, 0x61, 0x6e, 0x79, 0x5f, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x6f, 0x6f, 0x4d, 0x61, 0x6e, 0x79,
	0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x6f, 0x6f, 0x4d, 0x61, 0x6e,
	0x79, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x12, 0x6e, 0x0a, 0x18, 0x62, 0x61, 0x6c, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65,
	0x64, 0x65, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x48, 0x00, 0x52,
	0x16, 0x62, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x65, 0x64, 0x65, 0x64, 0x12, 0x65, 0x0a, 0x15, 0x62, 0x61, 0x6c, 0x6c, 0x5f,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x48, 0x00, 0x52, 0x13, 0x62, 0x61, 0x6c, 0x6c, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x5f,
	0x0a, 0x13, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x5f, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x66,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47,
	0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79,
	0x4b, 0x69, 0x63, 0x6b, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x48, 0x00, 0x52, 0x11, 0x70, 0x65,
	0x6e, 0x61, 0x6c, 0x74, 0x79, 0x4b, 0x69, 0x63, 0x6b, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12,
	0x47, 0x0a, 0x0d, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x67, 0x6f, 0x61, 0x6c,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x6f, 0x73, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x36, 0x0a, 0x04, 0x67, 0x6f, 0x61, 0x6c,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x04, 0x67, 0x6f, 0x61, 0x6c,
	0x12, 0x45, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x67, 0x6f, 0x61, 0x6c,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x47, 0x6f, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x5e, 0x0a, 0x12, 0x72, 0x6f, 0x62, 0x6f, 0x74,
	0x5f, 0x73, 0x75, 0x62, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x53, 0x75, 0x62, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x11, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x53, 0x75, 0x62, 0x73, 0x74,
	0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x52, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x52, 0x0a, 0x0e, 0x65,
	0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x22, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x48, 0x00,
	0x52, 0x0d, 0x65, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x12,
	0x71, 0x0a, 0x19, 0x75, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x18, 0x23, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x55, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x17, 0x75, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x4d, 0x69, 0x6e,
	0x6f, 0x72, 0x12, 0x71, 0x0a, 0x19, 0x75, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x5f, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x55, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x17, 0x75, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x1a, 0xc2, 0x01, 0x0a, 0x0d, 0x42, 0x61, 0x6c, 0x6c, 0x4c, 0x65,
	0x66, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65,
	0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x06, 0x62, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x34, 0x0a, 0x08, 0x62, 0x79, 0x5f, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x49, 0x64, 0x52, 0x07, 0x62, 0x79, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x4a,
	0x0a, 0x13, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x11, 0x6c, 0x65, 0x66, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xa5, 0x01, 0x0a, 0x15, 0x42,
	0x61, 0x6c, 0x6c, 0x4c, 0x65, 0x66, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x6f, 0x75, 0x6e,
	0x64, 0x61, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62,
	0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x5b, 0x0a, 0x1c, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x19, 0x6c, 0x65, 0x66, 0x74, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x81, 0x02, 0x0a, 0x0b, 0x41, 0x69, 0x6d, 0x6c, 0x65, 0x73, 0x73, 0x4b, 0x69,
	0x63, 0x6b, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79, 0x54,
	0x65, 0x61, 0x6d, 0x12, 0x34, 0x0a, 0x08, 0x62, 0x79, 0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64,
	0x52, 0x07, 0x62, 0x79, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x4a, 0x0a, 0x13, 0x6c, 0x65, 0x66,
	0x74, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32,
	0x44, 0x66, 0x52, 0x11, 0x6c, 0x65, 0x66, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0d, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x0c, 0x6b, 0x69, 0x63, 0x6b, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xbd, 0x01, 0x0a, 0x12, 0x47, 0x6f, 0x61, 0x6c, 0x6b,
	0x65, 0x65, 0x70, 0x65, 0x72, 0x48, 0x65, 0x6c, 0x64, 0x42, 0x61, 0x6c, 0x6c, 0x12, 0x2f, 0x0a,
	0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x3f,
	0x0a, 0x0d, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44,
	0x66, 0x52, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xc0, 0x02, 0x0a, 0x1a, 0x52, 0x6f, 0x62, 0x6f, 0x74,
	0x54, 0x6f, 0x6f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x6f, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x73,
	0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06,
	0x62, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x34, 0x0a, 0x08, 0x62, 0x79, 0x5f, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x62, 0x6f,
	0x74, 0x49, 0x64, 0x52, 0x07, 0x62, 0x79, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x41, 0x0a, 0x0e,
	0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66,
	0x52, 0x0d, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x37, 0x0a, 0x18, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x64,
	0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x15, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x44, 0x65, 0x66,
	0x65, 0x6e, 0x73, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x3f, 0x0a, 0x0d, 0x62, 0x61, 0x6c, 0x6c,
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x0c, 0x62, 0x61, 0x6c,
	0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x91, 0x02, 0x0a, 0x12, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x49, 0x6e, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x41, 0x72, 0x65, 0x61,
	0x12, 0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79, 0x54, 0x65, 0x61,
	0x6d, 0x12, 0x34, 0x0a, 0x08, 0x62, 0x79, 0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x52, 0x07,
	0x62, 0x79, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x72, 0x6f, 0x62, 0x6f, 0x74,
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x0d, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x26, 0x64, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x5f,
	0x61, 0x72, 0x65, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x21, 0x64, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x4e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x41, 0x72, 0x65, 0x61, 0x1a, 0xa4, 0x02,
	0x0a, 0x10, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x50, 0x75, 0x73, 0x68, 0x65, 0x64, 0x52, 0x6f, 0x62,
	0x6f, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79, 0x54,
	0x65, 0x61, 0x6d, 0x12, 0x40, 0x0a, 0x0e, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x52, 0x0d, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x3c, 0x0a, 0x0c, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x5f,
	0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x52, 0x0b, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44,
	0x66, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x70,
	0x75, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x70, 0x75, 0x73, 0x68, 0x65, 0x64, 0x44, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x1a, 0xfa, 0x01, 0x0a, 0x19, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x48, 0x65,
	0x6c, 0x64, 0x42, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x62, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x6c, 0x79, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79, 0x54,
	0x65, 0x61, 0x6d, 0x12, 0x34, 0x0a, 0x08, 0x62, 0x79, 0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64,
	0x52, 0x07, 0x62, 0x79, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x62, 0x61, 0x6c,
	0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x0c, 0x62, 0x61,
	0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x82, 0x02, 0x0a, 0x17, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x44, 0x72, 0x69, 0x62, 0x62,
	0x6c, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x6c, 0x54, 0x6f, 0x6f, 0x46, 0x61, 0x72, 0x12, 0x2f, 0x0a,
	0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x34,
	0x0a, 0x08, 0x62, 0x79, 0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x52, 0x07, 0x62, 0x79, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x5f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xfc, 0x01, 0x0a, 0x0f, 0x52, 0x6f, 0x62, 0x6f, 0x74,
	0x54, 0x69, 0x70, 0x70, 0x65, 0x64, 0x4f, 0x76, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x79,
	0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54,
	0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x34, 0x0a, 0x08, 0x62,
	0x79, 0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x52, 0x07, 0x62, 0x79, 0x52, 0x6f, 0x62, 0x6f,
	0x74, 0x12, 0x41, 0x0a, 0x0e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x0d, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0d, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x9c, 0x02, 0x0a, 0x1d, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x54,
	0x6f, 0x75, 0x63, 0x68, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x6c, 0x49, 0x6e, 0x44, 0x65, 0x66, 0x65,
	0x6e, 0x73, 0x65, 0x41, 0x72, 0x65, 0x61, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65,
	0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x06, 0x62, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x34, 0x0a, 0x08, 0x62, 0x79, 0x5f, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x49, 0x64, 0x52, 0x07, 0x62, 0x79, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x41,
	0x0a, 0x0e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32,
	0x44, 0x66, 0x52, 0x0d, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x51, 0x0a, 0x26, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x6f,
	0x5f, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6f,
	0x75, 0x74, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x21, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x4e, 0x65, 0x61,
	0x72, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x73, 0x69, 0x64, 0x65,
	0x41, 0x72, 0x65, 0x61, 0x1a, 0xb7, 0x02, 0x0a, 0x16, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x4b, 0x69,
	0x63, 0x6b, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x6c, 0x54, 0x6f, 0x6f, 0x46, 0x61, 0x73, 0x74, 0x12,
	0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79, 0x54, 0x65, 0x61, 0x6d,
	0x12, 0x34, 0x0a, 0x08, 0x62, 0x79, 0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x52, 0x07, 0x62,
	0x79, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x5e, 0x0a, 0x1e, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x61,
	0x74, 0x5f, 0x68, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x1a, 0x62, 0x61, 0x6c, 0x6c,
	0x41, 0x74, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x6c, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x61, 0x73, 0x5f, 0x63, 0x68, 0x69, 0x70,
	0x70, 0x65, 0x64, 0x5f, 0x6b, 0x69, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x77, 0x61, 0x73, 0x43, 0x68, 0x69, 0x70, 0x70, 0x65, 0x64, 0x4b, 0x69, 0x63, 0x6b, 0x1a, 0xf3,
	0x02, 0x0a, 0x10, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x72, 0x61, 0x73, 0x68, 0x55, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79,
	0x54, 0x65, 0x61, 0x6d, 0x12, 0x40, 0x0a, 0x0e, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x52, 0x0d, 0x76, 0x69, 0x6f, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x3c, 0x0a, 0x0c, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d,
	0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x52, 0x0b, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x63, 0x72, 0x61, 0x73, 0x68, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x0d, 0x63, 0x72, 0x61, 0x73, 0x68, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x61, 0x73, 0x68,
	0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x72,
	0x61, 0x73, 0x68, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x70, 0x65, 0x65,
	0x64, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x61, 0x73, 0x68, 0x5f, 0x61, 0x6e, 0x67,
	0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x72, 0x61, 0x73, 0x68, 0x41,
	0x6e, 0x67, 0x6c, 0x65, 0x1a, 0xbf, 0x02, 0x0a, 0x0f, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x72,
	0x61, 0x73, 0x68, 0x44, 0x72, 0x61, 0x77, 0x6e, 0x12, 0x3d, 0x0a, 0x0d, 0x68, 0x6f, 0x6d, 0x65,
	0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x52, 0x0b, 0x68, 0x6f, 0x6d, 0x65,
	0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0d, 0x61, 0x77, 0x61, 0x79, 0x5f,
	0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x52, 0x0b, 0x61, 0x77, 0x61, 0x79, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x63, 0x72, 0x61, 0x73, 0x68, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x0d, 0x63, 0x72, 0x61, 0x73,
	0x68, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x61,
	0x73, 0x68, 0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a,
	0x63, 0x72, 0x61, 0x73, 0x68, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x70,
	0x65, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x44, 0x69, 0x66, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x61, 0x73, 0x68, 0x5f, 0x61,
	0x6e, 0x67, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x72, 0x61, 0x73,
	0x68, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x1a, 0xdf, 0x01, 0x0a, 0x12, 0x52, 0x6f, 0x62, 0x6f, 0x74,
	0x54, 0x6f, 0x6f, 0x46, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x2f, 0x0a,
	0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x34,
	0x0a, 0x08, 0x62, 0x79, 0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x52, 0x07, 0x62, 0x79, 0x52,
	0x6f, 0x62, 0x6f, 0x74, 0x12, 0x41, 0x0a, 0x0e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x0d, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x62, 0x6f, 0x74,
	0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x72, 0x6f,
	0x62, 0x6f, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x1a, 0xeb, 0x01, 0x0a, 0x18, 0x52, 0x6f, 0x62,
	0x6f, 0x74, 0x54, 0x6f, 0x6f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x6f, 0x4b, 0x69, 0x63, 0x6b,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06,
	0x62, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x34, 0x0a, 0x08, 0x62, 0x79, 0x5f, 0x72, 0x6f, 0x62,
	0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x62, 0x6f,
	0x74, 0x49, 0x64, 0x52, 0x07, 0x62, 0x79, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x41, 0x0a, 0x0e,
	0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66,
	0x52, 0x0d, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x44, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0xc8, 0x01, 0x0a, 0x1c, 0x52, 0x6f, 0x62, 0x6f, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x65, 0x72, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x6c, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65,
	0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x06, 0x62, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x34, 0x0a, 0x08, 0x62, 0x79, 0x5f, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x49, 0x64, 0x52, 0x07, 0x62, 0x79, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x41,
	0x0a, 0x0e, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32,
	0x44, 0x66, 0x52, 0x0d, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0xc0, 0x01, 0x0a, 0x16, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x44, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x54, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x6c, 0x12, 0x2f, 0x0a, 0x07,
	0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x34, 0x0a,
	0x08, 0x62, 0x79, 0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x52, 0x07, 0x62, 0x79, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x8a, 0x01, 0x0a, 0x10, 0x4e, 0x6f, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x62, 0x61, 0x6c,
	0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x0c, 0x62, 0x61,
	0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x40, 0x0a, 0x0d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79, 0x54,
	0x65, 0x61, 0x6d, 0x1a, 0x40, 0x0a, 0x0d, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x46,
	0x6f, 0x75, 0x6c, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62,
	0x79, 0x54, 0x65, 0x61, 0x6d, 0x1a, 0xde, 0x01, 0x0a, 0x0d, 0x54, 0x6f, 0x6f, 0x4d, 0x61, 0x6e,
	0x79, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65,
	0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x06, 0x62, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x2c, 0x0a, 0x12, 0x6e, 0x75, 0x6d, 0x5f,
	0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x41,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x2d, 0x0a, 0x13, 0x6e, 0x75, 0x6d, 0x5f, 0x72, 0x6f,
	0x62, 0x6f, 0x74, 0x73, 0x5f, 0x6f, 0x6e, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x6e, 0x75, 0x6d, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x4f, 0x6e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x0c, 0x62, 0x61, 0x6c, 0x6c, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x82, 0x02, 0x0a, 0x16, 0x42, 0x61, 0x6c, 0x6c, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x65,
	0x64, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79, 0x54, 0x65,
	0x61, 0x6d, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x1c, 0x64, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x19, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x6f, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x3f, 0x0a, 0x1c, 0x64, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x19, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x75, 0x0a, 0x13, 0x42,
	0x61, 0x6c, 0x6c, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79, 0x54,
	0x65, 0x61, 0x6d, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x11, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x1a, 0x85, 0x01, 0x0a, 0x11, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x4b, 0x69,
	0x63, 0x6b, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74,
	0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61,
	0x6d, 0x52, 0x06, 0x62, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x3f, 0x0a, 0x0d, 0x62, 0x61, 0x6c,
	0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x0c, 0x62, 0x61,
	0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xc9, 0x04, 0x0a, 0x04, 0x47,
	0x6f, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79,
	0x54, 0x65, 0x61, 0x6d, 0x12, 0x39, 0x0a, 0x0c, 0x6b, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65,
	0x61, 0x6d, 0x52, 0x0b, 0x6b, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x61, 0x6d, 0x12,
	0x3e, 0x0a, 0x0d, 0x6b, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49,
	0x64, 0x52, 0x0c, 0x6b, 0x69, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12,
	0x55, 0x0a, 0x19, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x77, 0x68, 0x65, 0x6e, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x16,
	0x62, 0x61, 0x6c, 0x6c, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x68, 0x65, 0x6e,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x6b, 0x69, 0x63, 0x6b, 0x5f, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x0c, 0x6b, 0x69, 0x63, 0x6b, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x62,
	0x61, 0x6c, 0x6c, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0d, 0x6d, 0x61, 0x78, 0x42, 0x61, 0x6c, 0x6c, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x3f, 0x0a, 0x1d, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73,
	0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x65, 0x61, 0x6d,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x52, 0x6f, 0x62,
	0x6f, 0x74, 0x73, 0x4f, 0x66, 0x53, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x61, 0x6d,
	0x12, 0x69, 0x0a, 0x24, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x5f, 0x62,
	0x79, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x1f, 0x6c, 0x61, 0x73, 0x74,
	0x54, 0x6f, 0x75, 0x63, 0x68, 0x42, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x54, 0x65,
	0x61, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x44, 0x0a, 0x11, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x53,
	0x75, 0x62, 0x73, 0x74, 0x69, 0x74, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x07, 0x62,
	0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x1a, 0x40, 0x0a, 0x0d,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x2f, 0x0a,
	0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x1a, 0x40,
	0x0a, 0x0d, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x74, 0x6f, 0x70, 0x12,
	0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79, 0x54, 0x65, 0x61, 0x6d,
	0x1a, 0x62, 0x0a, 0x17, 0x55, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x4d, 0x69, 0x6e, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x62,
	0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x1a, 0x62, 0x0a, 0x17, 0x55, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x42, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12,
	0x2f, 0x0a, 0x07, 0x62, 0x79, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x06, 0x62, 0x79, 0x54, 0x65, 0x61, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protocols_common_game_event_proto_rawDescOnce sync.Once
	file_protocols_common_game_event_proto_rawDescData = file_protocols_common_game_event_proto_rawDesc
)

func file_protocols_common_game_event_proto_rawDescGZIP() []byte {
	file_protocols_common_game_event_proto_rawDescOnce.Do(func() {
		file_protocols_common_game_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocols_common_game_event_proto_rawDescData)
	})
	return file_protocols_common_game_event_proto_rawDescData
}

var file_protocols_common_game_event_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_protocols_common_game_event_proto_goTypes = []interface{}{
	(*GameEvent)(nil),                               // 0: protocols.common.GameEvent
	(*GameEvent_BallLeftField)(nil),                 // 1: protocols.common.GameEvent.BallLeftField
	(*GameEvent_BallLeftFieldBoundary)(nil),         // 2: protocols.common.GameEvent.BallLeftFieldBoundary
	(*GameEvent_AimlessKick)(nil),                   // 3: protocols.common.GameEvent.AimlessKick
	(*GameEvent_GoalkeeperHeldBall)(nil),            // 4: protocols.common.GameEvent.GoalkeeperHeldBall
	(*GameEvent_RobotTooCloseToDefenseArea)(nil),    // 5: protocols.common.GameEvent.RobotTooCloseToDefenseArea
	(*GameEvent_RobotInDefenseArea)(nil),            // 6: protocols.common.GameEvent.RobotInDefenseArea
	(*GameEvent_RobotPushedRobot)(nil),              // 7: protocols.common.GameEvent.RobotPushedRobot
	(*GameEvent_RobotHeldBallDeliberately)(nil),     // 8: protocols.common.GameEvent.RobotHeldBallDeliberately
	(*GameEvent_RobotDribbledBallTooFar)(nil),       // 9: protocols.common.GameEvent.RobotDribbledBallTooFar
	(*GameEvent_RobotTippedOver)(nil),               // 10: protocols.common.GameEvent.RobotTippedOver
	(*GameEvent_RobotTouchedBallInDefenseArea)(nil), // 11: protocols.common.GameEvent.RobotTouchedBallInDefenseArea
	(*GameEvent_RobotKickedBallTooFast)(nil),        // 12: protocols.common.GameEvent.RobotKickedBallTooFast
	(*GameEvent_RobotCrashUnique)(nil),              // 13: protocols.common.GameEvent.RobotCrashUnique
	(*GameEvent_RobotCrashDrawn)(nil),               // 14: protocols.common.GameEvent.RobotCrashDrawn
	(*GameEvent_RobotTooFastInStop)(nil),            // 15: protocols.common.GameEvent.RobotTooFastInStop
	(*GameEvent_RobotTooCloseToKickPoint)(nil),      // 16: protocols.common.GameEvent.RobotTooCloseToKickPoint
	(*GameEvent_RobotInterferedBallPlacement)(nil),  // 17: protocols.common.GameEvent.RobotInterferedBallPlacement
	(*GameEvent_RobotDoubleTouchedBall)(nil),        // 18: protocols.common.GameEvent.RobotDoubleTouchedBall
	(*GameEvent_NoProgressInGame)(nil),              // 19: protocols.common.GameEvent.NoProgressInGame
	(*GameEvent_MultipleCards)(nil),                 // 20: protocols.common.GameEvent.MultipleCards
	(*GameEvent_MultipleFouls)(nil),                 // 21: protocols.common.GameEvent.MultipleFouls
	(*GameEvent_TooManyRobots)(nil),                 // 22: protocols.common.GameEvent.TooManyRobots
	(*GameEvent_BallPlacementSucceeded)(nil),        // 23: protocols.common.GameEvent.BallPlacementSucceeded
	(*GameEvent_BallPlacementFailed)(nil),           // 24: protocols.common.GameEvent.BallPlacementFailed
	(*GameEvent_PenaltyKickFailed)(nil),             // 25: protocols.common.GameEvent.PenaltyKickFailed
	(*GameEvent_Goal)(nil),                          // 26: protocols.common.GameEvent.Goal
	(*GameEvent_RobotSubstitution)(nil),             // 27: protocols.common.GameEvent.RobotSubstitution
	(*GameEvent_ChallengeFlag)(nil),                 // 28: protocols.common.GameEvent.ChallengeFlag
	(*GameEvent_EmergencyStop)(nil),                 // 29: protocols.common.GameEvent.EmergencyStop
	(*GameEvent_UnsportingBehaviorMinor)(nil),       // 30: protocols.common.GameEvent.UnsportingBehaviorMinor
	(*GameEvent_UnsportingBehaviorMajor)(nil),       // 31: protocols.common.GameEvent.UnsportingBehaviorMajor
	(*timestamppb.Timestamp)(nil),                   // 32: google.protobuf.Timestamp
	(Team)(0),                                       // 33: protocols.common.Team
	(*RobotId)(nil),                                 // 34: protocols.common.RobotId
	(*Point2Df)(nil),                                // 35: protocols.common.Point2Df
	(*durationpb.Duration)(nil),                     // 36: google.protobuf.Duration
}
var file_protocols_common_game_event_proto_depIdxs = []int32{
	32,  // 0: protocols.common.GameEvent.timestamp:type_name -> google.protobuf.Timestamp
	1,   // 1: protocols.common.GameEvent.ball_left_field_touch_line:type_name -> protocols.common.GameEvent.BallLeftField
	1,   // 2: protocols.common.GameEvent.ball_left_field_goal_line:type_name -> protocols.common.GameEvent.BallLeftField
	2,   // 3: protocols.common.GameEvent.ball_left_field_boundary:type_name -> protocols.common.GameEvent.BallLeftFieldBoundary
	3,   // 4: protocols.common.GameEvent.aimless_kick:type_name -> protocols.common.GameEvent.AimlessKick
	4,   // 5: protocols.common.GameEvent.goalkeeper_held_ball:type_name -> protocols.common.GameEvent.GoalkeeperHeldBall
	5,   // 6: protocols.common.GameEvent.robot_too_close_to_defense_area:type_name -> protocols.common.GameEvent.RobotTooCloseToDefenseArea
	6,   // 7: protocols.common.GameEvent.robot_in_defense_area:type_name -> protocols.common.GameEvent.RobotInDefenseArea
	7,   // 8: protocols.common.GameEvent.robot_pushed_robot:type_name -> protocols.common.GameEvent.RobotPushedRobot
	8,   // 9: protocols.common.GameEvent.robot_held_ball_deliberately:type_name -> protocols.common.GameEvent.RobotHeldBallDeliberately
	9,   // 10: protocols.common.GameEvent.robot_dribbled_ball_too_far:type_name -> protocols.common.GameEvent.RobotDribbledBallTooFar
	10,  // 11: protocols.common.GameEvent.robot_tipped_over:type_name -> protocols.common.GameEvent.RobotTippedOver
	11,  // 12: protocols.common.GameEvent.robot_touched_ball_in_defense_area:type_name -> protocols.common.GameEvent.RobotTouchedBallInDefenseArea
	12,  // 13: protocols.common.GameEvent.robot_kicked_ball_too_fast:type_name -> protocols.common.GameEvent.RobotKickedBallTooFast
	13,  // 14: protocols.common.GameEvent.robot_crash_unique:type_name -> protocols.common.GameEvent.RobotCrashUnique
	14,  // 15: protocols.common.GameEvent.robot_crash_drawn:type_name -> protocols.common.GameEvent.RobotCrashDrawn
	15,  // 16: protocols.common.GameEvent.robot_too_fast_in_stop:type_name -> protocols.common.GameEvent.RobotTooFastInStop
	16,  // 17: protocols.common.GameEvent.robot_too_close_to_kick_point:type_name -> protocols.common.GameEvent.RobotTooCloseToKickPoint
	17,  // 18: protocols.common.GameEvent.robot_interfered_ball_placement:type_name -> protocols.common.GameEvent.RobotInterferedBallPlacement
	18,  // 19: protocols.common.GameEvent.robot_double_touched_ball:type_name -> protocols.common.GameEvent.RobotDoubleTouchedBall
	19,  // 20: protocols.common.GameEvent.no_progress_in_game:type_name -> protocols.common.GameEvent.NoProgressInGame
	20,  // 21: protocols.common.GameEvent.multiple_cards:type_name -> protocols.common.GameEvent.MultipleCards
	21,  // 22: protocols.common.GameEvent.multiple_fouls:type_name -> protocols.common.GameEvent.MultipleFouls
	22,  // 23: protocols.common.GameEvent.too_many_robots:type_name -> protocols.common.GameEvent.TooManyRobots
	23,  // 24: protocols.common.GameEvent.ball_placement_succeeded:type_name -> protocols.common.GameEvent.BallPlacementSucceeded
	24,  // 25: protocols.common.GameEvent.ball_placement_failed:type_name -> protocols.common.GameEvent.BallPlacementFailed
	25,  // 26: protocols.common.GameEvent.penalty_kick_failed:type_name -> protocols.common.GameEvent.PenaltyKickFailed
	26,  // 27: protocols.common.GameEvent.possible_goal:type_name -> protocols.common.GameEvent.Goal
	26,  // 28: protocols.common.GameEvent.goal:type_name -> protocols.common.GameEvent.Goal
	26,  // 29: protocols.common.GameEvent.invalid_goal:type_name -> protocols.common.GameEvent.Goal
	27,  // 30: protocols.common.GameEvent.robot_substitution:type_name -> protocols.common.GameEvent.RobotSubstitution
	28,  // 31: protocols.common.GameEvent.challenge_flag:type_name -> protocols.common.GameEvent.ChallengeFlag
	29,  // 32: protocols.common.GameEvent.emergency_stop:type_name -> protocols.common.GameEvent.EmergencyStop
	30,  // 33: protocols.common.GameEvent.unsporting_behavior_minor:type_name -> protocols.common.GameEvent.UnsportingBehaviorMinor
	31,  // 34: protocols.common.GameEvent.unsporting_behavior_major:type_name -> protocols.common.GameEvent.UnsportingBehaviorMajor
	33,  // 35: protocols.common.GameEvent.BallLeftField.by_team:type_name -> protocols.common.Team
	34,  // 36: protocols.common.GameEvent.BallLeftField.by_robot:type_name -> protocols.common.RobotId
	35,  // 37: protocols.common.GameEvent.BallLeftField.left_field_position:type_name -> protocols.common.Point2Df
	33,  // 38: protocols.common.GameEvent.BallLeftFieldBoundary.by_team:type_name -> protocols.common.Team
	35,  // 39: protocols.common.GameEvent.BallLeftFieldBoundary.left_field_boundary_position:type_name -> protocols.common.Point2Df
	33,  // 40: protocols.common.GameEvent.AimlessKick.by_team:type_name -> protocols.common.Team
	34,  // 41: protocols.common.GameEvent.AimlessKick.by_robot:type_name -> protocols.common.RobotId
	35,  // 42: protocols.common.GameEvent.AimlessKick.left_field_position:type_name -> protocols.common.Point2Df
	35,  // 43: protocols.common.GameEvent.AimlessKick.kick_position:type_name -> protocols.common.Point2Df
	33,  // 44: protocols.common.GameEvent.GoalkeeperHeldBall.by_team:type_name -> protocols.common.Team
	35,  // 45: protocols.common.GameEvent.GoalkeeperHeldBall.ball_position:type_name -> protocols.common.Point2Df
	36,  // 46: protocols.common.GameEvent.GoalkeeperHeldBall.duration:type_name -> google.protobuf.Duration
	33,  // 47: protocols.common.GameEvent.RobotTooCloseToDefenseArea.by_team:type_name -> protocols.common.Team
	34,  // 48: protocols.common.GameEvent.RobotTooCloseToDefenseArea.by_robot:type_name -> protocols.common.RobotId
	35,  // 49: protocols.common.GameEvent.RobotTooCloseToDefenseArea.robot_position:type_name -> protocols.common.Point2Df
	35,  // 50: protocols.common.GameEvent.RobotTooCloseToDefenseArea.ball_position:type_name -> protocols.common.Point2Df
	33,  // 51: protocols.common.GameEvent.RobotInDefenseArea.by_team:type_name -> protocols.common.Team
	34,  // 52: protocols.common.GameEvent.RobotInDefenseArea.by_robot:type_name -> protocols.common.RobotId
	35,  // 53: protocols.common.GameEvent.RobotInDefenseArea.robot_position:type_name -> protocols.common.Point2Df
	33,  // 54: protocols.common.GameEvent.RobotPushedRobot.by_team:type_name -> protocols.common.Team
	34,  // 55: protocols.common.GameEvent.RobotPushedRobot.violator_robot:type_name -> protocols.common.RobotId
	34,  // 56: protocols.common.GameEvent.RobotPushedRobot.victim_robot:type_name -> protocols.common.RobotId
	35,  // 57: protocols.common.GameEvent.RobotPushedRobot.position:type_name -> protocols.common.Point2Df
	33,  // 58: protocols.common.GameEvent.RobotHeldBallDeliberately.by_team:type_name -> protocols.common.Team
	34,  // 59: protocols.common.GameEvent.RobotHeldBallDeliberately.by_robot:type_name -> protocols.common.RobotId
	35,  // 60: protocols.common.GameEvent.RobotHeldBallDeliberately.ball_position:type_name -> protocols.common.Point2Df
	36,  // 61: protocols.common.GameEvent.RobotHeldBallDeliberately.duration:type_name -> google.protobuf.Duration
	33,  // 62: protocols.common.GameEvent.RobotDribbledBallTooFar.by_team:type_name -> protocols.common.Team
	34,  // 63: protocols.common.GameEvent.RobotDribbledBallTooFar.by_robot:type_name -> protocols.common.RobotId
	35,  // 64: protocols.common.GameEvent.RobotDribbledBallTooFar.start_position:type_name -> protocols.common.Point2Df
	35,  // 65: protocols.common.GameEvent.RobotDribbledBallTooFar.end_position:type_name -> protocols.common.Point2Df
	33,  // 66: protocols.common.GameEvent.RobotTippedOver.by_team:type_name -> protocols.common.Team
	34,  // 67: protocols.common.GameEvent.RobotTippedOver.by_robot:type_name -> protocols.common.RobotId
	35,  // 68: protocols.common.GameEvent.RobotTippedOver.robot_position:type_name -> protocols.common.Point2Df
	35,  // 69: protocols.common.GameEvent.RobotTippedOver.ball_position:type_name -> protocols.common.Point2Df
	33,  // 70: protocols.common.GameEvent.RobotTouchedBallInDefenseArea.by_team:type_name -> protocols.common.Team
	34,  // 71: protocols.common.GameEvent.RobotTouchedBallInDefenseArea.by_robot:type_name -> protocols.common.RobotId
	35,  // 72: protocols.common.GameEvent.RobotTouchedBallInDefenseArea.robot_position:type_name -> protocols.common.Point2Df
	33,  // 73: protocols.common.GameEvent.RobotKickedBallTooFast.by_team:type_name -> protocols.common.Team
	34,  // 74: protocols.common.GameEvent.RobotKickedBallTooFast.by_robot:type_name -> protocols.common.RobotId
	35,  // 75: protocols.common.GameEvent.RobotKickedBallTooFast.ball_at_highest_speed_position:type_name -> protocols.common.Point2Df
	33,  // 76: protocols.common.GameEvent.RobotCrashUnique.by_team:type_name -> protocols.common.Team
	34,  // 77: protocols.common.GameEvent.RobotCrashUnique.violator_robot:type_name -> protocols.common.RobotId
	34,  // 78: protocols.common.GameEvent.RobotCrashUnique.victim_robot:type_name -> protocols.common.RobotId
	35,  // 79: protocols.common.GameEvent.RobotCrashUnique.crash_position:type_name -> protocols.common.Point2Df
	34,  // 80: protocols.common.GameEvent.RobotCrashDrawn.home_robot_id:type_name -> protocols.common.RobotId
	34,  // 81: protocols.common.GameEvent.RobotCrashDrawn.away_robot_id:type_name -> protocols.common.RobotId
	35,  // 82: protocols.common.GameEvent.RobotCrashDrawn.crash_position:type_name -> protocols.common.Point2Df
	33,  // 83: protocols.common.GameEvent.RobotTooFastInStop.by_team:type_name -> protocols.common.Team
	34,  // 84: protocols.common.GameEvent.RobotTooFastInStop.by_robot:type_name -> protocols.common.RobotId
	35,  // 85: protocols.common.GameEvent.RobotTooFastInStop.robot_position:type_name -> protocols.common.Point2Df
	33,  // 86: protocols.common.GameEvent.RobotTooCloseToKickPoint.by_team:type_name -> protocols.common.Team
	34,  // 87: protocols.common.GameEvent.RobotTooCloseToKickPoint.by_robot:type_name -> protocols.common.RobotId
	35,  // 88: protocols.common.GameEvent.RobotTooCloseToKickPoint.robot_position:type_name -> protocols.common.Point2Df
	33,  // 89: protocols.common.GameEvent.RobotInterferedBallPlacement.by_team:type_name -> protocols.common.Team
	34,  // 90: protocols.common.GameEvent.RobotInterferedBallPlacement.by_robot:type_name -> protocols.common.RobotId
	35,  // 91: protocols.common.GameEvent.RobotInterferedBallPlacement.robot_position:type_name -> protocols.common.Point2Df
	33,  // 92: protocols.common.GameEvent.RobotDoubleTouchedBall.by_team:type_name -> protocols.common.Team
	34,  // 93: protocols.common.GameEvent.RobotDoubleTouchedBall.by_robot:type_name -> protocols.common.RobotId
	35,  // 94: protocols.common.GameEvent.RobotDoubleTouchedBall.ball_position:type_name -> protocols.common.Point2Df
	35,  // 95: protocols.common.GameEvent.NoProgressInGame.ball_position:type_name -> protocols.common.Point2Df
	36,  // 96: protocols.common.GameEvent.NoProgressInGame.duration:type_name -> google.protobuf.Duration
	33,  // 97: protocols.common.GameEvent.MultipleCards.by_team:type_name -> protocols.common.Team
	33,  // 98: protocols.common.GameEvent.MultipleFouls.by_team:type_name -> protocols.common.Team
	33,  // 99: protocols.common.GameEvent.TooManyRobots.by_team:type_name -> protocols.common.Team
	35,  // 100: protocols.common.GameEvent.TooManyRobots.ball_position:type_name -> protocols.common.Point2Df
	33,  // 101: protocols.common.GameEvent.BallPlacementSucceeded.by_team:type_name -> protocols.common.Team
	36,  // 102: protocols.common.GameEvent.BallPlacementSucceeded.duration:type_name -> google.protobuf.Duration
	33,  // 103: protocols.common.GameEvent.BallPlacementFailed.by_team:type_name -> protocols.common.Team
	33,  // 104: protocols.common.GameEvent.PenaltyKickFailed.by_team:type_name -> protocols.common.Team
	35,  // 105: protocols.common.GameEvent.PenaltyKickFailed.ball_position:type_name -> protocols.common.Point2Df
	33,  // 106: protocols.common.GameEvent.Goal.by_team:type_name -> protocols.common.Team
	33,  // 107: protocols.common.GameEvent.Goal.kicking_team:type_name -> protocols.common.Team
	34,  // 108: protocols.common.GameEvent.Goal.kicking_robot:type_name -> protocols.common.RobotId
	35,  // 109: protocols.common.GameEvent.Goal.ball_position_when_scored:type_name -> protocols.common.Point2Df
	35,  // 110: protocols.common.GameEvent.Goal.kick_position:type_name -> protocols.common.Point2Df
	32,  // 111: protocols.common.GameEvent.Goal.last_touch_by_scoring_team_timestamp:type_name -> google.protobuf.Timestamp
	33,  // 112: protocols.common.GameEvent.RobotSubstitution.by_team:type_name -> protocols.common.Team
	33,  // 113: protocols.common.GameEvent.ChallengeFlag.by_team:type_name -> protocols.common.Team
	33,  // 114: protocols.common.GameEvent.EmergencyStop.by_team:type_name -> protocols.common.Team
	33,  // 115: protocols.common.GameEvent.UnsportingBehaviorMinor.by_team:type_name -> protocols.common.Team
	33,  // 116: protocols.common.GameEvent.UnsportingBehaviorMajor.by_team:type_name -> protocols.common.Team
	117, // [117:117] is the sub-list for method output_type
	117, // [117:117] is the sub-list for method input_type
	117, // [117:117] is the sub-list for extension type_name
	117, // [117:117] is the sub-list for extension extendee
	0,   // [0:117] is the sub-list for field type_name
}

func init() { file_protocols_common_game_event_proto_init() }
func file_protocols_common_game_event_proto_init() {
	if File_protocols_common_game_event_proto != nil {
		return
	}
	file_protocols_common_geometry_proto_init()
	file_protocols_common_robot_id_proto_init()
	file_protocols_common_team_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protocols_common_game_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_BallLeftField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_BallLeftFieldBoundary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_AimlessKick); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_GoalkeeperHeldBall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_RobotTooCloseToDefenseArea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_RobotInDefenseArea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_RobotPushedRobot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_RobotHeldBallDeliberately); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_RobotDribbledBallTooFar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_RobotTippedOver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_RobotTouchedBallInDefenseArea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_RobotKickedBallTooFast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_RobotCrashUnique); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_RobotCrashDrawn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_RobotTooFastInStop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_RobotTooCloseToKickPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_RobotInterferedBallPlacement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_RobotDoubleTouchedBall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_NoProgressInGame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_MultipleCards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_MultipleFouls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_TooManyRobots); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_BallPlacementSucceeded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_BallPlacementFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_PenaltyKickFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_Goal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_RobotSubstitution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_ChallengeFlag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_EmergencyStop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_UnsportingBehaviorMinor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_common_game_event_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameEvent_UnsportingBehaviorMajor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protocols_common_game_event_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*GameEvent_BallLeftFieldTouchLine)(nil),
		(*GameEvent_BallLeftFieldGoalLine)(nil),
		(*GameEvent_BallLeftFieldBoundary_)(nil),
		(*GameEvent_AimlessKick_)(nil),
		(*GameEvent_GoalkeeperHeldBall_)(nil),
		(*GameEvent_RobotTooCloseToDefenseArea_)(nil),
		(*GameEvent_RobotInDefenseArea_)(nil),
		(*GameEvent_RobotPushedRobot_)(nil),
		(*GameEvent_RobotHeldBallDeliberately_)(nil),
		(*GameEvent_RobotDribbledBallTooFar_)(nil),
		(*GameEvent_RobotTippedOver_)(nil),
		(*GameEvent_RobotTouchedBallInDefenseArea_)(nil),
		(*GameEvent_RobotKickedBallTooFast_)(nil),
		(*GameEvent_RobotCrashUnique_)(nil),
		(*GameEvent_RobotCrashDrawn_)(nil),
		(*GameEvent_RobotTooFastInStop_)(nil),
		(*GameEvent_RobotTooCloseToKickPoint_)(nil),
		(*GameEvent_RobotInterferedBallPlacement_)(nil),
		(*GameEvent_RobotDoubleTouchedBall_)(nil),
		(*GameEvent_NoProgressInGame_)(nil),
		(*GameEvent_MultipleCards_)(nil),
		(*GameEvent_MultipleFouls_)(nil),
		(*GameEvent_TooManyRobots_)(nil),
		(*GameEvent_BallPlacementSucceeded_)(nil),
		(*GameEvent_BallPlacementFailed_)(nil),
		(*GameEvent_PenaltyKickFailed_)(nil),
		(*GameEvent_PossibleGoal)(nil),
		(*GameEvent_Goal_)(nil),
		(*GameEvent_InvalidGoal)(nil),
		(*GameEvent_RobotSubstitution_)(nil),
		(*GameEvent_ChallengeFlag_)(nil),
		(*GameEvent_EmergencyStop_)(nil),
		(*GameEvent_UnsportingBehaviorMinor_)(nil),
		(*GameEvent_UnsportingBehaviorMajor_)(nil),
	}
	file_protocols_common_game_event_proto_msgTypes[26].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocols_common_game_event_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protocols_common_game_event_proto_goTypes,
		DependencyIndexes: file_protocols_common_game_event_proto_depIdxs,
		MessageInfos:      file_protocols_common_game_event_proto_msgTypes,
	}.Build()
	File_protocols_common_game_event_proto = out.File
	file_protocols_common_game_event_proto_rawDesc = nil
	file_protocols_common_game_event_proto_goTypes = nil
	file_protocols_common_game_event_proto_depIdxs = nil
}
