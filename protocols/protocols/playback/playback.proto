syntax = "proto3";

package protocols.playback;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "protocols/common/game_command.proto";
import "protocols/common/game_event.proto";
import "protocols/common/game_stage.proto";
import "protocols/common/match_type.proto";
import "protocols/common/robot_id.proto";
import "protocols/common/geometry.proto";

message Playback {
  google.protobuf.Timestamp first_vision_timestamp = 1;
  google.protobuf.Timestamp vision_timestamp = 2;

  uint64 detection_id = 3;

  repeated Ball balls = 4;
  Team home_team = 5;
  Team away_team = 6;
  Field field = 7;

  bool is_home_team_on_positive_half = 8;

  common.GameStage game_stage = 9;
  optional google.protobuf.Duration game_stage_time_left = 10;

  uint64 total_commands_issued = 11;
  google.protobuf.Timestamp command_issued_timestamp = 12;
  common.GameCommand command = 13;
  common.GameCommand next_command = 14;

  common.MatchType match_type = 15;
  optional string game_status_description = 16;

  repeated common.GameEvent game_events = 17;
  repeated GameEventsProposal game_events_proposals = 18;
}

message Ball {
  common.Point3Df position = 1;
  common.Point3Df velocity = 2;

  reserved 3;
  reserved "acceleration";
}

message Robot {
  common.RobotId robot_id = 1;
  common.Point2Df position = 2;
  float angle = 3;
  common.Point2Df velocity = 4;
  float angular_velocity = 5;

  reserved 6;
  reserved "acceleration";

  message PhysicalAttributes {
    float radius = 1;
    float height = 2;
    float dribbler_width = 3;
    float wheel_radius = 4;
  }
  PhysicalAttributes physical_attributes = 7;

  message Feedback {
    optional bool dribbler_ball_contact = 1;
    optional float kick_charge_percentage = 2;
    optional float battery_percentage = 3;

    message Wheel {
      int32 wheel_id = 1;
      float motor_speed = 2;
    }
    repeated Wheel wheels = 4;
  }
  Feedback feedback = 8;
}

message Field {
  float length = 1;
  float width = 2;
  float goal_depth = 3;
  float goal_width = 4;
  float penalty_area_depth = 5;
  float penalty_area_width = 6;
  float boundary_width = 7;
  float goal_center_to_penalty_mark = 8;
}


message Team {
  string name = 1;
  uint32 score = 2;

  repeated Robot robots = 3;
  common.RobotId goalkeeper_id = 4;

  uint32 yellow_cards = 5;
  repeated google.protobuf.Duration time_to_expire_active_yellow_cards = 6;

  uint32 red_cards = 7;

  uint32 timeouts_left = 8;
  google.protobuf.Duration total_timeout_time_left = 9;

  uint32 total_fouls_committed = 10;

  uint32 consecutive_ball_placement_failures = 11;
  bool is_ball_placement_enabled = 12;
  bool has_ball_placement_failures_reached_maximum = 13;

  uint32 maximum_allowed_robots = 14;

  bool is_robot_substitution_requested = 15;
  bool is_bot_substitution_allowed = 16;

  uint32 robot_substitutions_left = 17;
  google.protobuf.Duration robot_substitution_time_left = 18;
}

message GameEventsProposal {
  string proposal_id = 1;
  repeated common.GameEvent game_events = 2;
  bool was_accepted = 3;
}